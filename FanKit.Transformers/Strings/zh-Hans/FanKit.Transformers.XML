<?xml version="1.0"?>
<doc>
  <assembly>
    <name> FanKit.Transformers </name>
  </assembly>
  <members>
    <member name="T:FanKit.Transformers.CanvasTransformer">
      <summary>
        变换者：
        按照位置，比例，弧度提供矩阵。


        TODO:
        画布层：
        图层的原始大小。
        虚拟层：
        将所有图层渲染在一起，并使它们的中心点与原点 (0,0）一致，然后进行缩放；
        控制层：
        首先绕原点旋转，然后平移。 (画布具有旋转角度）

      </summary>
    </member>
    <member name="P:FanKit.Transformers.CanvasTransformer.Width">
      <summary> 获取或设置画布的宽度。 </summary>
    </member>
    <member name="P:FanKit.Transformers.CanvasTransformer.Height">
      <summary> 获取或设置画布的高度。 </summary>
    </member>
    <member name="P:FanKit.Transformers.CanvasTransformer.Scale">
      <summary> 获取或设置画布的缩放值。 </summary>
    </member>
    <member name="P:FanKit.Transformers.CanvasTransformer.ControlWidth">
      <summary> 获取或设置控件的宽度。 </summary>
    </member>
    <member name="P:FanKit.Transformers.CanvasTransformer.ControlHeight">
      <summary> 获取或设置控件的高度。 </summary>
    </member>
    <member name="P:FanKit.Transformers.CanvasTransformer.ControlCenter">
      <summary> 获取控件的中心点的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.CanvasTransformer.Position">
      <summary> 获取或设置画布的平移分量。 </summary>
    </member>
    <member name="P:FanKit.Transformers.CanvasTransformer.Radian">
      <summary> 获取或设置画布的旋转值。 </summary>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.#ctor">
      <summary>
        初始化 <see cref="T:FanKit.Transformers.CanvasTransformer"/>。
      </summary>
    </member>
    <member name="P:FanKit.Transformers.CanvasTransformer.Size">
      <summary> 获取控件的尺寸。 </summary>
    </member>
    <member name="P:FanKit.Transformers.CanvasTransformer.BitmapSize">
      <summary> 获取画布的尺寸。 </summary>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.GetScale(Windows.Graphics.Imaging.BitmapSize)">
      <summary>
        得到缩放。
      </summary>
      <param name="bitmapSize"> 位图大小。 </param>
      <returns> 产生的向量。 </returns>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.Fit">
      <summary>
        适合屏幕。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.Fit(System.Single)">
      <summary>
        缩放到适合屏幕的尺寸。
      </summary>
      <param name="scale"> 缩放值。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.GetBorderValue(FanKit.Transformers.BorderMode)">
      <summary>
        通过左，右，上，下获取值。
      </summary>
      <param name="borderMode"> 边界模式。 </param>
      <returns> 产生的值。 </returns>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.GetIndicatorVector(FanKit.Transformers.IndicatorMode)">
      <summary>
        按左，右，上，下获取向量。
      </summary>
      <param name="indicatorMode"> 指示器模式。 </param>
      <returns> 产生的向量。 </returns>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.GetMatrix">
      <summary>
        获取 <see cref="T:FanKit.Transformers.CanvasTransformer"/> 的矩阵。
        在使用之前，请调用 <see cref="M:FanKit.Transformers.CanvasTransformer.ReloadMatrix"/> 方法。
      </summary>
      <returns> 产生的矩阵。 </returns>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.GetMatrix(FanKit.Transformers.MatrixTransformerMode)">
      <summary>
        获取 <see cref="T:FanKit.Transformers.CanvasTransformer"/> 的矩阵。
        在使用之前，请调用 <see cref="M:FanKit.Transformers.CanvasTransformer.ReloadMatrix"/> 方法。
      </summary>
      <param name="mode"> 矩阵模式。 </param>
      <returns> 产生的矩阵。 </returns>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.GetInverseMatrix">
      <summary>
        获取 <see cref="T:FanKit.Transformers.CanvasTransformer"/> 的逆矩阵。
        在使用之前，请调用 <see cref="M:FanKit.Transformers.CanvasTransformer.ReloadMatrix"/> 方法。
      </summary>
      <returns> 产生的逆矩阵。 </returns>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.GetInverseMatrix(FanKit.Transformers.InverseMatrixTransformerMode)">
      <summary>
        获取 <see cref="T:FanKit.Transformers.CanvasTransformer"/> 的逆矩阵。
        在使用之前，请调用 <see cref="M:FanKit.Transformers.CanvasTransformer.ReloadMatrix"/> 方法。
      </summary>
      <param name="mode"> 逆矩阵模式。 </param>
      <returns> 产生的逆矩阵。 </returns>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.ReloadMatrix">
      <summary>
        重新加载 <see cref="T:FanKit.Transformers.CanvasTransformer"/> 的所有矩阵。
        如果宽度，高度，比例，位置或弧度发生变化，请调用此方法以更新矩阵
      </summary>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.CacheMove(System.Numerics.Vector2)">
      <summary>
        缓存Move事件的数据。
      </summary>
      <param name="point"> 点。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.Move(System.Numerics.Vector2)">
      <summary>
        移动位置（首先发生缓存移动事件）。
      </summary>
      <param name="point"> 点。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.CachePinch(System.Numerics.Vector2,System.Single)">
      <summary>
        缓存捏合事件的数据。
      </summary>
      <param name="centerPoint"> 中心点。 </param>
      <param name="space"> 手指之间的间距。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.Pinch(System.Numerics.Vector2,System.Single)">
      <summary>
        捏住屏幕以改变位置和比例（缓存捏合事件首先发生）。
      </summary>
      <param name="centerPoint"> 中心点。 </param>
      <param name="space"> 手指之间的间距。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.ZoomIn(System.Numerics.Vector2,System.Single,System.Single)">
      <summary>
        操纵显示以缩小图像。
      </summary>
      <param name="centerPoint"> 中心点。 </param>
      <param name="zoomInScale"> 比例尺。 </param>
      <param name="maximum"> 最大缩放。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.ZoomOut(System.Numerics.Vector2,System.Single,System.Single)">
      <summary>
        操纵显示以使图像更大。
      </summary>
      <param name="centerPoint"> 中心点。 </param>
      <param name="zoomOutScale"> 比例尺。 </param>
      <param name="minimum"> 最小缩放。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.TransitionSource(System.Numerics.Vector2,System.Single,System.Single)">
      <summary>
        设置源矩形。
      </summary>
      <param name="postion"> 源的位置。 </param>
      <param name="width"> 源的宽度。 </param>
      <param name="height"> 源的高度。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.TransitionSource(Windows.Foundation.Rect)">
      <summary>
        设置源矩形。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.TransitionDestination(System.Numerics.Vector2,System.Single,System.Single)">
      <summary>
        设置目标区域。
      </summary>
      <param name="postion"> 目标的位置。 </param>
      <param name="width"> 目标的宽度。 </param>
      <param name="height"> 目标的高度。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.TransitionDestination(Windows.Foundation.Rect)">
      <summary>
        设置目标区域。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.CanvasTransformer.Transition(System.Single)">
      <summary>
        使矩阵在源和目标之间转换。
      </summary>
      <param name="value"> 转换值（0.0f 是源，1.0f 是目标）。 </param>
    </member>
    <member name="T:FanKit.Transformers.DottedLineBrush">
      <summary>
        提供用于绘制虚线的笔刷。
      </summary>
    </member>
    <member name="P:FanKit.Transformers.DottedLineBrush.Brush">
      <summary> 获取线性渐变笔刷。 </summary>
    </member>
    <member name="M:FanKit.Transformers.DottedLineBrush.#ctor(Microsoft.Graphics.Canvas.ICanvasResourceCreator,System.Single)">
      <summary>
        初始化用于绘制虚线的笔刷。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="distance"> 两个渐变点之间的距离。 </param>
    </member>
    <member name="M:FanKit.Transformers.DottedLineBrush.Update(System.Single)">
      <summary>
        更新笔刷的位移
      </summary>
      <param name="space"> 位移的变化。 </param>
    </member>
    <member name="M:FanKit.Transformers.DottedLineBrush.Dispose">
      <summary>
        执行并释放或重置非托管资源
      </summary>
    </member>
    <member name="T:FanKit.Transformers.DottedLineImage">
      <summary>
        提供用于绘制虚线的输出图像。
      </summary>
    </member>
    <member name="P:FanKit.Transformers.DottedLineImage.Input">
      <summary> 烘焙了输入图像。 </summary>
    </member>
    <member name="P:FanKit.Transformers.DottedLineImage.Output">
      <summary> 烘焙了输入图像。 </summary>
    </member>
    <member name="P:FanKit.Transformers.DottedLineImage.Bounds">
      <summary> 获取位图的范围，以设备独立像素（DIP）为单位。 </summary>
    </member>
    <member name="M:FanKit.Transformers.DottedLineImage.#ctor(Microsoft.Graphics.Canvas.CanvasRenderTarget)">
      <summary>
        初始化虚线图像类的新实例。
      </summary>
      <param name="input"> 输入图像。 </param>
    </member>
    <member name="M:FanKit.Transformers.DottedLineImage.CreateDrawingSession">
      <summary>
        返回一个新的绘图会话。绘制会话绘制到 CanvasRenderTarget 上。
      </summary>
      <returns> 绘制会话。 </returns>
    </member>
    <member name="M:FanKit.Transformers.DottedLineImage.Baking(Microsoft.Graphics.Canvas.ICanvasResourceCreator,System.Boolean)">
      <summary>
        将输入图像转为图像边缘线。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="isCrop"> 是否修剪边缘。 </param>
    </member>
    <member name="M:FanKit.Transformers.DottedLineImage.Baking(Microsoft.Graphics.Canvas.ICanvasResourceCreator,System.Numerics.Matrix3x2,System.Boolean)">
      <summary>
        将输入图像转为图像边缘线。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="isCrop"> 是否修剪边缘。 </param>
    </member>
    <member name="M:FanKit.Transformers.DottedLineImage.Dispose">
      <summary>
        执行并释放或重置非托管资源
      </summary>
    </member>
    <member name="T:FanKit.Transformers.BorderMode">
      <summary>
        <see cref="T:FanKit.Transformers.TransformerBorder"/> 的模式。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.BorderMode.None">
      <summary> 正常。 </summary>
    </member>
    <member name="F:FanKit.Transformers.BorderMode.MinX">
      <summary>
        <see cref="P:FanKit.Transformers.Transformer.MinX"/>。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.BorderMode.CenterX">
      <summary>
        <see cref="P:FanKit.Transformers.Transformer.CenterX"/>。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.BorderMode.MaxX">
      <summary>
        <see cref="P:FanKit.Transformers.Transformer.MaxX"/>。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.BorderMode.MinY">
      <summary>
        <see cref="P:FanKit.Transformers.Transformer.MinY"/>。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.BorderMode.CenterY">
      <summary>
        <see cref="P:FanKit.Transformers.Transformer.CenterY"/>。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.BorderMode.MaxY">
      <summary>
        <see cref="P:FanKit.Transformers.Transformer.MaxY"/>。
      </summary>
    </member>
    <member name="T:FanKit.Transformers.MarqueeCompositeMode">
      <summary>
        选区框工具使用的复合模式。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.MarqueeCompositeMode.New">
      <summary> 新的位图。 </summary>
    </member>
    <member name="F:FanKit.Transformers.MarqueeCompositeMode.Add">
      <summary> 源位图和目标位图的并集。 </summary>
    </member>
    <member name="F:FanKit.Transformers.MarqueeCompositeMode.Subtract">
      <summary> 源位图的区域。 </summary>
    </member>
    <member name="F:FanKit.Transformers.MarqueeCompositeMode.Intersect">
      <summary> 源位图和目标位图的交集。 </summary>
    </member>
    <member name="F:FanKit.Transformers.MarqueeCompositeMode.Xor">
      <summary> 具有异或功能的源位图和目标位图的并集，用于重叠的像素。 </summary>
    </member>
    <member name="T:FanKit.Transformers.MarqueeToolType">
      <summary>
        选区框工具的不同形状的工具。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.MarqueeToolType.None">
      <summary> 正常。 </summary>
    </member>
    <member name="F:FanKit.Transformers.MarqueeToolType.Rectangular">
      <summary> □ </summary>
    </member>
    <member name="F:FanKit.Transformers.MarqueeToolType.Elliptical">
      <summary> ◯ </summary>
    </member>
    <member name="F:FanKit.Transformers.MarqueeToolType.Polygonal">
      <summary> 🗨 </summary>
    </member>
    <member name="F:FanKit.Transformers.MarqueeToolType.FreeHand">
      <summary> 🗯 </summary>
    </member>
    <member name="T:FanKit.Transformers.NodeBorder">
      <summary>
        表示用于临时存储的未选中节点的边界。
      </summary>
    </member>
    <member name="P:FanKit.Transformers.NodeBorder.Mode">
      <summary>
        移除模式。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.NodeBorder.GetRemoveMode">
      <summary>
        获取移除模式，设置 <see cref="P:FanKit.Transformers.NodeBorder.Mode"/>。
      </summary>
      <returns> 产生的模式。 </returns>
    </member>
    <member name="M:FanKit.Transformers.NodeBorder.GetUnCheckedNodes">
      <summary>
        获取所有未选中的节点。
      </summary>
      <returns> 产生的节点。 </returns>
    </member>
    <member name="M:FanKit.Transformers.NodeBorder.Dispose">
      <summary>
        执行并释放或重置非托管资源。
      </summary>
    </member>
    <member name="T:FanKit.Transformers.NodeBorderCollection">
      <summary>
        表示未经选中的节点的边界集合，用于临时存储。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.NodeBorderCollection.#ctor(FanKit.Transformers.NodeCollection)">
      <summary>
        初始化节点边界集合。
      </summary>
      <param name="nodeCollection">
        <see cref="T:FanKit.Transformers.NodeCollection"/>。
      </param>
    </member>
    <member name="M:FanKit.Transformers.NodeBorderCollection.GetRemoveMode">
      <summary>
        获取移除模式。
      </summary>
      <returns> 产生的模式。 </returns>
    </member>
    <member name="M:FanKit.Transformers.NodeBorderCollection.GetUnCheckedNodes">
      <summary>
        获取所有未选中的节点。
      </summary>
      <returns> 产生的节点。 </returns>
    </member>
    <member name="M:FanKit.Transformers.NodeBorderCollection.Dispose">
      <summary>
        执行并释放或重置非托管资源。
      </summary>
    </member>
    <member name="T:FanKit.Transformers.NodeCollection">
      <summary>
        表示节点对象的有序集合。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.CacheTransform">
      <summary>
        缓存 <see cref="T:FanKit.Transformers.NodeCollection"/> 的变换者。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.CacheTransformOnlySelected">
      <summary>
        缓存 <see cref="T:FanKit.Transformers.NodeCollection"/> 的变换者。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.TransformAdd(System.Numerics.Vector2)">
      <summary>
        通过给定的向量变换节点。
      </summary>
      <param name="vector"> 用于相加的加值。 </param>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.TransformAddOnlySelected(System.Numerics.Vector2)">
      <summary>
        通过给定的向量变换节点。
      </summary>
      <param name="vector"> 用于相加的加值。 </param>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.TransformMultiplies(System.Numerics.Matrix3x2)">
      <summary>
        通过给定的矩阵变换节点。
      </summary>
      <param name="matrix"> 结果矩阵。 </param>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.TransformMultipliesOnlySelected(System.Numerics.Matrix3x2)">
      <summary>
        通过给定的矩阵变换节点。
      </summary>
      <param name="matrix"> 结果矩阵。 </param>
    </member>
    <member name="P:FanKit.Transformers.NodeCollection.Index">
      <summary> 获取或设置选择项的索引。 </summary>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.#ctor">
      <summary>
        初始化 <see cref="T:FanKit.Transformers.NodeCollection"/>。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.#ctor(System.Collections.Generic.IEnumerable{FanKit.Transformers.Node})">
      <summary>
        初始化 <see cref="T:FanKit.Transformers.NodeCollection"/>。
      </summary>
      <param name="nodes"> 节点。 </param>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.#ctor(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>
        初始化 <see cref="T:FanKit.Transformers.NodeCollection"/>。
      </summary>
      <param name="left"> 第一个点。 </param>
      <param name="right"> 第二个点。 </param>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.#ctor(Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)">
      <summary>
        初始化 <see cref="T:FanKit.Transformers.NodeCollection"/>。
      </summary>
      <param name="geometry"> 几何形状。 </param>
    </member>
    <member name="P:FanKit.Transformers.NodeCollection.SelectedItem">
      <summary> 获取选择项。 </summary>
    </member>
    <member name="P:FanKit.Transformers.NodeCollection.SelectedItems">
      <summary> 获取选择项。 </summary>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.CreateGeometry(Microsoft.Graphics.Canvas.ICanvasResourceCreator)">
      <summary>
        创建一个新的几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <returns> 创建的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.Clone">
      <summary>
        获取自己的副本。
      </summary>
      <returns>
        克隆的 <see cref="T:FanKit.Transformers.NodeCollection"/>。
      </returns>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.NodesClone">
      <summary>
        获取自己的副本。
      </summary>
      <returns> 克隆的节点。 </returns>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.NodesStartingClone">
      <summary>
        获取自己的起始副本（例如： <see cref="P:FanKit.Transformers.Node.StartingIsChecked"/> ）。
      </summary>
      <returns> 克隆的节点。 </returns>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.ContainsNodeCollectionMode(System.Numerics.Vector2,FanKit.Transformers.NodeCollection)">
      <summary>
        通过 <see cref="T:FanKit.Transformers.NodeCollection"/> 获取包含指定点的所有点。
      </summary>
      <param name="point"> 输入点。 </param>
      <param name="nodeCollection">
        源 <see cref="T:FanKit.Transformers.NodeCollection"/>。
      </param>
      <returns>
        <see cref="T:FanKit.Transformers.NodeCollection"/> 模式。
      </returns>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.ContainsNodeCollectionMode(System.Numerics.Vector2,FanKit.Transformers.NodeCollection,System.Numerics.Matrix3x2)">
      <summary>
        通过 <see cref="T:FanKit.Transformers.NodeCollection"/> 获取包含指定点的所有点。
      </summary>
      <param name="point"> 输入点。 </param>
      <param name="nodeCollection">
        源 <see cref="T:FanKit.Transformers.NodeCollection"/>。
      </param>
      <param name="matrix"> 矩阵。 </param>
      <returns>
        <see cref="T:FanKit.Transformers.NodeCollection"/> 模式。
      </returns>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.InterpolationCheckedNodes(FanKit.Transformers.NodeCollection)">
      <summary>
        在选中点之间插入新点
      </summary>
      <param name="nodeCollection">
        源 <see cref="T:FanKit.Transformers.NodeCollection"/>。
      </param>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.SharpCheckedNodes(FanKit.Transformers.NodeCollection)">
      <summary>
        锐化所有选中的节点。
      </summary>
      <param name="nodeCollection">
        源 <see cref="T:FanKit.Transformers.NodeCollection"/>。
      </param>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.SmoothCheckedNodes(FanKit.Transformers.NodeCollection)">
      <summary>
        平滑所有选中的节点。
      </summary>
      <param name="nodeCollection">
        源 <see cref="T:FanKit.Transformers.NodeCollection"/>。
      </param>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.ArrangeNodes(System.Collections.Generic.IList{FanKit.Transformers.Node})">
      <summary>
        排列所有选中点的右控制点。
      </summary>
      <param name="nodes"> 节点。 </param>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.SetFilledRegionDetermination(Microsoft.Graphics.Canvas.Geometry.CanvasFilledRegionDetermination)">
      <summary>
        指定用于确定哪些点在所描述的几何形状内的方法
        通过此路径构建器，以及哪些点在外面。
      </summary>
      <param name="filledRegionDetermination"> 填充区域判定。 </param>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.SetSegmentOptions(Microsoft.Graphics.Canvas.Geometry.CanvasFigureSegmentOptions)">
      <summary>
        指定用于确定哪些点在所描述的几何形状内的方法
        通过此路径构建器，以及哪些点在外面。
      </summary>
      <param name="figureSegmentOptions"> 图段选项。 </param>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.BeginFigure(System.Numerics.Vector2,Microsoft.Graphics.Canvas.Geometry.CanvasFigureFill)">
      <summary>
        使用指定的图形填充选项在指定的点开始一个新图形。
      </summary>
      <param name="startPoint"> 起点。 </param>
      <param name="figureFill"> 图形填充。 </param>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.EndFigure(Microsoft.Graphics.Canvas.Geometry.CanvasFigureLoop)">
      <summary>
        结束当前图形； (可选）关闭它。
      </summary>
      <param name="figureLoop"> 图形循环。 </param>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.AddLine(System.Numerics.Vector2)">
      <summary>
        将线段添加到具有指定终点的路径。
      </summary>
      <param name="endPoint"> 终点。 </param>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.AddQuadraticBezier(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>
        将二次贝塞尔曲线添加到路径。贝塞尔曲线从路径中断处开始，
        并具有指定的控制点和终点。
      </summary>
      <param name="controlPoint"> 控制点。 </param>
      <param name="endPoint"> 终点。 </param>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.AddArc(System.Numerics.Vector2,System.Single,System.Single,System.Single,Microsoft.Graphics.Canvas.Geometry.CanvasSweepDirection,Microsoft.Graphics.Canvas.Geometry.CanvasArcSize)">
      <summary>
        向路径添加一个圆弧，该圆弧由起点和终点指定，通过该起点和终点
        椭圆将被容纳。
      </summary>
      <param name="endPoint"> 终点。 </param>
      <param name="radiusX"> 圆弧半径（ X 轴）。 </param>
      <param name="radiusY"> 圆弧半径（ Y 轴）。 </param>
      <param name="rotationAngle"> 旋转角度 </param>
      <param name="sweepDirection"> 扫描方向。 </param>
      <param name="arcSize"> 圆弧尺寸。 </param>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.AddCubicBezier(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>
        向该路径添加一个三次方贝塞尔曲线。贝塞尔曲线从路径中断处开始，然后
        具有指定的控制点和终点。
      </summary>
      <param name="controlPoint1"> 第一控制点。 </param>
      <param name="controlPoint2"> 第二控制点。 </param>
      <param name="endPoint"> 终点。 </param>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.SelectionOnlyOne(System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary>
        仅选择一个节点。
      </summary>
      <param name="point"> 点。 </param>
      <param name="matrix"> 矩阵。 </param>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.SelectionDeselect">
      <summary>
        取消选择。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.RectChoose(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        选中在矩形中的节点。
      </summary>
      <param name="left"> 目标矩形的左侧的 X 轴值。 </param>
      <param name="top"> 目标矩形的顶部的 Y 轴位置。 </param>
      <param name="right"> 目标矩形的右侧的 X 轴值。 </param>
      <param name="bottom"> 目标矩形的底部的 Y 轴位置。 </param>
    </member>
    <member name="M:FanKit.Transformers.NodeCollection.BoxChoose(FanKit.Transformers.TransformerRect)">
      <summary>
        选中在矩形中的节点。
      </summary>
      <param name="boxRect"> 目标矩形。 </param>
    </member>
    <member name="T:FanKit.Transformers.NodeCollectionMode">
      <summary>
        <see cref="T:FanKit.Transformers.NodeCollection"/> 的状态。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.NodeCollectionMode.None">
      <summary> 正常。 </summary>
    </member>
    <member name="F:FanKit.Transformers.NodeCollectionMode.Preview">
      <summary> 在创建图层之前预览一条线。 </summary>
    </member>
    <member name="F:FanKit.Transformers.NodeCollectionMode.Add">
      <summary> 将节点添加到曲线图层中的节点。 </summary>
    </member>
    <member name="F:FanKit.Transformers.NodeCollectionMode.Move">
      <summary> 在曲线图层中移动多个节点。 </summary>
    </member>
    <member name="F:FanKit.Transformers.NodeCollectionMode.MoveSingleNodePoint">
      <summary> 移动节点的点。 </summary>
    </member>
    <member name="F:FanKit.Transformers.NodeCollectionMode.MoveSingleNodeLeftControlPoint">
      <summary> 移动节点的左控制点。 </summary>
    </member>
    <member name="F:FanKit.Transformers.NodeCollectionMode.MoveSingleNodeRightControlPoint">
      <summary> 移动节点的右控制点。 </summary>
    </member>
    <member name="F:FanKit.Transformers.NodeCollectionMode.RectChoose">
      <summary> 填充一个选择矩形。 </summary>
    </member>
    <member name="T:FanKit.Transformers.NodeRemoveMode">
      <summary>
        <see cref="!:Node"/> 的状态。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.NodeRemoveMode.None">
      <summary> 正常。 </summary>
    </member>
    <member name="F:FanKit.Transformers.NodeRemoveMode.RemovedNodes">
      <summary> 移除所有选中的节点。 </summary>
    </member>
    <member name="F:FanKit.Transformers.NodeRemoveMode.RemoveCurve">
      <summary> 移除曲线。 </summary>
    </member>
    <member name="T:FanKit.Transformers.NodeMode">
      <summary>
        <see cref="T:FanKit.Transformers.Node"/> 的模式。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.NodeMode.None">
      <summary> 正常。 </summary>
    </member>
    <member name="F:FanKit.Transformers.NodeMode.PointWithChecked">
      <summary> 已选中节点的点。 </summary>
    </member>
    <member name="F:FanKit.Transformers.NodeMode.PointWithoutChecked">
      <summary> 未选中节点的点。 </summary>
    </member>
    <member name="F:FanKit.Transformers.NodeMode.LeftControlPoint">
      <summary> 左控制点。 </summary>
    </member>
    <member name="F:FanKit.Transformers.NodeMode.RightControlPoint">
      <summary> 右控制点。 </summary>
    </member>
    <member name="T:FanKit.Transformers.NodeType">
      <summary>
        <see cref="T:FanKit.Transformers.Node"/> 的类型。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.NodeType.BeginFigure">
      <summary>
        图形的开始。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.NodeType.Node">
      <summary>
        节点。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.NodeType.EndFigure">
      <summary>
        图形的结束。
      </summary>
    </member>
    <member name="T:FanKit.Transformers.CanvasDrawingSessionExtensions">
      <summary>
        <see cref="T:Microsoft.Graphics.Canvas.CanvasDrawingSession"/> 的扩展。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.CanvasDrawingSessionExtensions.TranslucentDodgerBlue">
      <summary> 兰色的半透明颜色。默认（A90 R54 G135 B230）。 </summary>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawLineDodgerBlue(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>
        绘制线带着兰色颜色。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="point0"> 第一个点。 </param>
      <param name="point1"> 第二个点。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawThickLine(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>
        绘制粗线。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="point0"> 第一个点。 </param>
      <param name="point1"> 第二个点。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawEllipseDodgerBlue(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Numerics.Vector2,System.Single,System.Single)">
      <summary>
        绘制椭圆带着兰色颜色。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="centerPoint"> 中心点。 </param>
      <param name="radiusX"> 椭圆半径（ X 轴）。 </param>
      <param name="radiusY"> 椭圆半径（ Y 轴）。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawThickEllipse(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Numerics.Vector2,System.Single,System.Single)">
      <summary>
        绘制椭圆。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="centerPoint"> 中心点。 </param>
      <param name="radiusX"> 椭圆半径（ X 轴）。 </param>
      <param name="radiusY"> 椭圆半径（ Y 轴）。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawRectangleDodgerBlue(Microsoft.Graphics.Canvas.CanvasDrawingSession,Windows.Foundation.Rect)">
      <summary>
        绘制矩形带着兰色颜色。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="rect"> 矩形。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawThickRectangle(Microsoft.Graphics.Canvas.CanvasDrawingSession,Windows.Foundation.Rect)">
      <summary>
        绘制粗矩形。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="rect"> 矩形。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawGeometryDodgerBlue(Microsoft.Graphics.Canvas.CanvasDrawingSession,Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)">
      <summary>
        绘制几何形状带着兰色颜色。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="canvasGeometry"> 画布几何形状。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawThickGeometry(Microsoft.Graphics.Canvas.CanvasDrawingSession,Microsoft.Graphics.Canvas.Geometry.CanvasGeometry)">
      <summary>
        绘制粗几何形状。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="canvasGeometry"> 画布几何形状。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawDottedLine(Microsoft.Graphics.Canvas.CanvasDrawingSession,Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.DottedLineBrush,FanKit.Transformers.DottedLineImage,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        绘制虚线。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="dottedLineBrush"> 笔刷。 </param>
      <param name="dottedLineImage"> 图像。 </param>
      <param name="width"> 宽度。 </param>
      <param name="height"> 高度。 </param>
      <param name="x"> X 轴距离。 </param>
      <param name="y"> Y 轴距离。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Numerics.Vector2)">
      <summary>
        绘制 ⊙。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="point"> 点。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Single,System.Single)">
      <summary>
        绘制 ⊙。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="x"> 点的 X 轴值。 </param>
      <param name="y"> 点的 Y 轴位置。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Numerics.Vector2,Windows.UI.Color)">
      <summary>
        绘制 ⊙。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="point"> 点。 </param>
      <param name="accentColor"> 强调色。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Single,System.Single,Windows.UI.Color)">
      <summary>
        绘制 ⊙。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="x"> 点的 X 轴值。 </param>
      <param name="y"> 点的 Y 轴位置。 </param>
      <param name="accentColor"> 强调色。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode2(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Numerics.Vector2)">
      <summary>
        绘制 ◉。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="point"> 点。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode2(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Single,System.Single)">
      <summary>
        绘制 ◉。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="x"> 点的 X 轴值。 </param>
      <param name="y"> 点的 Y 轴位置。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode2(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Numerics.Vector2,Windows.UI.Color)">
      <summary>
        绘制 ◉。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="point"> 点。 </param>
      <param name="accentColor"> 强调色。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode2(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Single,System.Single,Windows.UI.Color)">
      <summary>
        绘制 ◉。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="x"> 点的 X 轴值。 </param>
      <param name="y"> 点的 Y 轴位置。 </param>
      <param name="accentColor"> 强调色。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode3(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Numerics.Vector2)">
      <summary>
        绘制 ◻。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="point"> 点。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode3(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Single,System.Single)">
      <summary>
        绘制 ◻。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="x"> 点的 X 轴值。 </param>
      <param name="y"> 点的 Y 轴位置。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode3(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Numerics.Vector2,Windows.UI.Color)">
      <summary>
        绘制 ◻。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="point"> 点。 </param>
      <param name="accentColor"> 强调色。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode3(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Single,System.Single,Windows.UI.Color)">
      <summary>
        绘制 ◻。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="x"> 点的 X 轴值。 </param>
      <param name="y"> 点的 Y 轴位置。 </param>
      <param name="accentColor"> 强调色。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode4(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Numerics.Vector2)">
      <summary>
        绘制 ◼。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="point"> 点。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode4(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Single,System.Single)">
      <summary>
        绘制 ◼。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="x"> 点的 X 轴值。 </param>
      <param name="y"> 点的 Y 轴位置。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode4(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Numerics.Vector2,Windows.UI.Color)">
      <summary>
        绘制 ◼。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="point"> 点。 </param>
      <param name="accentColor"> 强调色。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode4(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Single,System.Single,Windows.UI.Color)">
      <summary>
        绘制 ◼。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="x"> 点的 X 轴值。 </param>
      <param name="y"> 点的 Y 轴位置。 </param>
      <param name="accentColor"> 强调色。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode5(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Numerics.Vector2)">
      <summary>
        绘制 ◌。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="point"> 点。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode5(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Single,System.Single)">
      <summary>
        绘制 ◌。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="x"> 点的 X 轴值。 </param>
      <param name="y"> 点的 Y 轴位置。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode5(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Numerics.Vector2,Windows.UI.Color)">
      <summary>
        绘制 ◌。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="point"> 点。 </param>
      <param name="accentColor"> 强调色。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNode5(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Single,System.Single,Windows.UI.Color)">
      <summary>
        绘制 ◌。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="x"> 点的 X 轴值。 </param>
      <param name="y"> 点的 Y 轴位置。 </param>
      <param name="accentColor"> 强调色。 </param>
    </member>
    <member name="F:FanKit.Transformers.CanvasDrawingSessionExtensions.ShadowColor">
      <summary> 投影的颜色。默认 （A64 R0 G0 B0）。 </summary>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawCrad(Microsoft.Graphics.Canvas.CanvasDrawingSession,Microsoft.Graphics.Canvas.ICanvasImage,Windows.Foundation.Rect,System.Single,System.Single)">
      <summary>
        绘制卡片。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="previousImage"> 原先的图像。 </param>
      <param name="cropRect"> 图像裁剪矩形。 </param>
      <param name="shadowBlurAmount"> 投影模糊量。 </param>
      <param name="shadowOffset"> 投影偏移。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawCrad(Microsoft.Graphics.Canvas.CanvasDrawingSession,Microsoft.Graphics.Canvas.ICanvasImage,Windows.Foundation.Rect,Windows.UI.Color,System.Single,System.Single)">
      <summary>
        绘制卡片。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="previousImage"> 原先的图像。 </param>
      <param name="cropRect"> 图像裁剪矩形。 </param>
      <param name="shadowColor"> 投影颜色。 </param>
      <param name="shadowBlurAmount"> 投影模糊量。 </param>
      <param name="shadowOffset"> 投影偏移。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawCrad(Microsoft.Graphics.Canvas.CanvasDrawingSession,Microsoft.Graphics.Canvas.ICanvasImage,Windows.Foundation.Rect,System.Numerics.Matrix3x2,System.Single,System.Single)">
      <summary>
        绘制卡片。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="previousImage"> 原先的图像。 </param>
      <param name="cropRect"> 图像裁剪矩形。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="shadowBlurAmount"> 投影模糊量。 </param>
      <param name="shadowOffset"> 投影偏移。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawCrad(Microsoft.Graphics.Canvas.CanvasDrawingSession,Microsoft.Graphics.Canvas.ICanvasImage,Windows.Foundation.Rect,System.Numerics.Matrix3x2,Windows.UI.Color,System.Single,System.Single)">
      <summary>
        绘制卡片。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="previousImage"> 原先的图像。 </param>
      <param name="cropRect"> 图像裁剪矩形。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="shadowColor"> 投影颜色。 </param>
      <param name="shadowBlurAmount"> 投影模糊量。 </param>
      <param name="shadowOffset"> 投影偏移。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawCrad(Microsoft.Graphics.Canvas.CanvasDrawingSession,Microsoft.Graphics.Canvas.ICanvasImage,FanKit.Transformers.CanvasTransformer,System.Single,System.Single)">
      <summary>
        绘制卡片。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="previousImage"> 原先的图像。 </param>
      <param name="canvasTransformer"> 画布变换者。 </param>
      <param name="shadowBlurAmount"> 投影模糊量。 </param>
      <param name="shadowOffset"> 投影偏移。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawCard(Microsoft.Graphics.Canvas.CanvasDrawingSession,Microsoft.Graphics.Canvas.ICanvasImage,FanKit.Transformers.CanvasTransformer,Windows.UI.Color,System.Single,System.Single)">
      <summary>
        绘制卡片。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="previousImage"> 原先的图像。 </param>
      <param name="canvasTransformer"> 画布变换者。 </param>
      <param name="shadowColor"> 投影颜色。 </param>
      <param name="shadowBlurAmount"> 投影模糊量。 </param>
      <param name="shadowOffset"> 投影偏移。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNodeCollection(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.NodeCollection)">
      <summary>
        通过 <see cref="T:FanKit.Transformers.NodeCollection"/> 绘制贝塞尔曲线。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="nodeCollection">
        <see cref="T:FanKit.Transformers.NodeCollection"/>。
      </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNodeCollection(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.NodeCollection,System.Numerics.Matrix3x2)">
      <summary>
        通过 <see cref="T:FanKit.Transformers.NodeCollection"/> 绘制贝塞尔曲线。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="nodeCollection">
        <see cref="T:FanKit.Transformers.NodeCollection"/>。
      </param>
      <param name="matrix"> 矩阵。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawNodeCollection(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.NodeCollection,System.Numerics.Matrix3x2,Windows.UI.Color)">
      <summary>
        通过 <see cref="T:FanKit.Transformers.NodeCollection"/> 绘制贝塞尔曲线。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="nodeCollection">
        <see cref="T:FanKit.Transformers.NodeCollection"/>。
      </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="accentColor"> 强调色。 </param>
    </member>
    <member name="F:FanKit.Transformers.CanvasDrawingSessionExtensions.TextColor">
      <summary> 文本的颜色。默认（A255 R127 G127 B127）。 </summary>
    </member>
    <member name="F:FanKit.Transformers.CanvasDrawingSessionExtensions.TextFormat">
      <summary> 文本的格式。 </summary>
    </member>
    <member name="F:FanKit.Transformers.CanvasDrawingSessionExtensions.AxisLine">
      <summary> 两条线之间的距离。默认 12。 </summary>
    </member>
    <member name="F:FanKit.Transformers.CanvasDrawingSessionExtensions.AxisThickLine">
      <summary> 两条粗线之间的距离。默认 20。 </summary>
    </member>
    <member name="F:FanKit.Transformers.CanvasDrawingSessionExtensions.AxisColor">
      <summary> 轴的颜色。默认（A255 R127 G127 B127）。 </summary>
    </member>
    <member name="F:FanKit.Transformers.CanvasDrawingSessionExtensions.AxisLineColor">
      <summary> 轴线的颜色。默认（A127 R127 G127 B127）。 </summary>
    </member>
    <member name="F:FanKit.Transformers.CanvasDrawingSessionExtensions.AxisThickLineColor">
      <summary> 轴粗线的颜色。默认（A127 R127 G127 B127）。 </summary>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawAxis(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.CanvasTransformer)">
      <summary>
        绘制 XY 轴。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="canvasTransformer"> 画布变换者。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawAxis(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.CanvasTransformer,System.Single,System.Single)">
      <summary>
        绘制 XY 轴。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="canvasTransformer"> 画布变换者。 </param>
      <param name="axisLine"> 两条线之间的距离。 </param>
      <param name="axisThickLine"> 两条粗线之间的距离。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawAxis(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.CanvasTransformer,System.Single,System.Single,Windows.UI.Color,Windows.UI.Color,Windows.UI.Color)">
      <summary>
        绘制 XY 轴。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="canvasTransformer"> 画布变换者。 </param>
      <param name="axisLine"> 两条线之间的距离。 </param>
      <param name="axisThickLine"> 两条粗线之间的距离。 </param>
      <param name="axisColor"> 轴的颜色。 </param>
      <param name="axisLineColor"> 轴线的颜色。 </param>
      <param name="axisThickLineColor"> 轴粗线的颜色。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawAxis(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.CanvasTransformer,System.Single,System.Single,Windows.UI.Color,Windows.UI.Color,Windows.UI.Color,Windows.UI.Color,Microsoft.Graphics.Canvas.Text.CanvasTextFormat)">
      <summary>
        绘制 XY 轴。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="canvasTransformer"> 画布变换者。 </param>
      <param name="axisLine"> 两条线之间的距离。 </param>
      <param name="axisThickLine"> 两条粗线之间的距离。 </param>
      <param name="axisColor"> 轴的颜色。 </param>
      <param name="axisLineColor"> 轴线的颜色。 </param>
      <param name="axisThickLineColor"> 轴粗线的颜色。 </param>
      <param name="textColor"> 文本的颜色。 </param>
      <param name="textFormat"> 文本的格式。 </param>
    </member>
    <member name="F:FanKit.Transformers.CanvasDrawingSessionExtensions.RulerWidth">
      <summary> 标尺的宽度。默认 20。 </summary>
    </member>
    <member name="F:FanKit.Transformers.CanvasDrawingSessionExtensions.RulerLine">
      <summary> 两条线之间的距离。默认 8。 </summary>
    </member>
    <member name="F:FanKit.Transformers.CanvasDrawingSessionExtensions.RulerThickLine">
      <summary> 两条粗线之间的距离。默认 12。 </summary>
    </member>
    <member name="F:FanKit.Transformers.CanvasDrawingSessionExtensions.RulerBackgroundColor">
      <summary> 标尺背景色的颜色。默认（A64 R127 G127 B127）。 </summary>
    </member>
    <member name="F:FanKit.Transformers.CanvasDrawingSessionExtensions.RulerColor">
      <summary> 标尺的颜色。默认（A255 R127 G127 B127）。 </summary>
    </member>
    <member name="F:FanKit.Transformers.CanvasDrawingSessionExtensions.RulerLineColor">
      <summary> 标尺线的颜色。默认（A127 R127 G127 B127）。 </summary>
    </member>
    <member name="F:FanKit.Transformers.CanvasDrawingSessionExtensions.RulerThickLineColor">
      <summary> 标尺粗线的颜色。默认（A127 R127 G127 B127）。 </summary>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawRuler(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.CanvasTransformer)">
      <summary>
        绘制标尺。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="canvasTransformer"> 画布变换者。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawRuler(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.CanvasTransformer,System.Single,System.Single,System.Single)">
      <summary>
        绘制标尺。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="canvasTransformer"> 画布变换者。 </param>
      <param name="rulerWidth"> 标尺的宽度。 </param>
      <param name="rulerLine"> 两条线之间的距离。 </param>
      <param name="rulerThickLine"> 两条粗线之间的距离。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawRuler(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.CanvasTransformer,System.Single,System.Single,System.Single,Windows.UI.Color,Windows.UI.Color,Windows.UI.Color,Windows.UI.Color)">
      <summary>
        绘制标尺。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="canvasTransformer"> 画布变换者。 </param>
      <param name="rulerWidth"> 标尺的宽度。 </param>
      <param name="rulerLine"> 两条线之间的距离。 </param>
      <param name="rulerThickLine"> 两条粗线之间的距离。 </param>
      <param name="rulerBackgroundColor"> 标尺背景色的颜色。 </param>
      <param name="rulerColor"> 标尺的颜色。 </param>
      <param name="rulerLineColor"> 标尺线的颜色。 </param>
      <param name="rulerThickLineColor"> 标尺粗线的颜色。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawRuler(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.CanvasTransformer,System.Single,System.Single,System.Single,Windows.UI.Color,Windows.UI.Color,Windows.UI.Color,Windows.UI.Color,Windows.UI.Color,Microsoft.Graphics.Canvas.Text.CanvasTextFormat)">
      <summary>
        绘制标尺。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="canvasTransformer"> 画布变换者。 </param>
      <param name="rulerWidth"> 标尺的宽度。 </param>
      <param name="rulerLine"> 两条线之间的距离。 </param>
      <param name="rulerThickLine"> 两条粗线之间的距离。 </param>
      <param name="rulerBackgroundColor"> 标尺背景色的颜色。 </param>
      <param name="rulerColor"> 标尺的颜色。 </param>
      <param name="rulerLineColor"> 标尺线的颜色。 </param>
      <param name="rulerThickLineColor"> 标尺粗线的颜色。 </param>
      <param name="textColor"> 文本的颜色。 </param>
      <param name="textFormat"> 文本的格式。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.FillMarqueeMask(Microsoft.Graphics.Canvas.CanvasDrawingSession,Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.MarqueeToolType,FanKit.Transformers.MarqueeTool,Windows.Foundation.Rect,FanKit.Transformers.MarqueeCompositeMode)">
      <summary>
        用选区框工具填充选区。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="toolType"> 选区框工具类型。 </param>
      <param name="marqueeTool"> 选区框工具。 </param>
      <param name="sourceRectangle"> 源矩形。 </param>
      <param name="compositeMode"> 复合模式。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawMarqueeTool(Microsoft.Graphics.Canvas.CanvasDrawingSession,Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.MarqueeToolType,FanKit.Transformers.MarqueeTool)">
      <summary>
        绘制选区框工具。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="toolType"> 选区框工具类型。 </param>
      <param name="marqueeTool"> 选区框工具。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawMarqueeTool(Microsoft.Graphics.Canvas.CanvasDrawingSession,Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.MarqueeToolType,FanKit.Transformers.MarqueeTool,System.Numerics.Matrix3x2)">
      <summary>
        绘制选区框工具。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="toolType"> 选区框工具类型。 </param>
      <param name="marqueeTool"> 选区框工具。 </param>
      <param name="matrix"> 矩阵。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawBound(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.Transformer)">
      <summary>
        在边界上画线。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="transformer"> 变换者。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawBound(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.Transformer,System.Numerics.Matrix3x2)">
      <summary>
        在边界上画线。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="transformer"> 变换者。 </param>
      <param name="matrix"> 矩阵。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawBound(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.Transformer,Windows.UI.Color)">
      <summary>
        在边界上画线。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="transformer"> 变换者。 </param>
      <param name="accentColor"> 强调色。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawBound(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.Transformer,System.Numerics.Matrix3x2,Windows.UI.Color)">
      <summary>
        在边界上画线。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="transformer"> 变换者。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="accentColor"> 强调色。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawBoundNodes(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.Transformer,System.Boolean)">
      <summary>
        在边界上绘制节点和线，就像【由】一样。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="transformer"> 变换者。 </param>
      <param name="disabledRadian"> 禁用旋转角度。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawBoundNodes(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.Transformer,System.Numerics.Matrix3x2,System.Boolean)">
      <summary>
        在边界上绘制节点和线，就像【由】一样。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="transformer"> 变换者。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="disabledRadian"> 禁用旋转角度。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawBoundNodes(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.Transformer,Windows.UI.Color,System.Boolean)">
      <summary>
        在边界上绘制节点和线，就像【由】一样。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="transformer"> 变换者。 </param>
      <param name="accentColor"> 强调色。 </param>
      <param name="disabledRadian"> 禁用旋转角度。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawBoundNodes(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.Transformer,System.Numerics.Matrix3x2,Windows.UI.Color,System.Boolean)">
      <summary>
        在边界上绘制节点和线，就像【由】一样。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="transformer"> 变换者。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="accentColor"> 强调色。 </param>
      <param name="disabledRadian"> 禁用旋转角度。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawCrop(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.Transformer)">
      <summary>
        在边界上绘制节点和线，就像 🔳一样。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="transformer"> 变换者。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawCrop(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.Transformer,System.Numerics.Matrix3x2)">
      <summary>
        在边界上绘制节点和线，就像 🔳一样。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="transformer"> 变换者。 </param>
      <param name="matrix"> 矩阵。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawCrop(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.Transformer,Windows.UI.Color)">
      <summary>
        在边界上绘制节点和线，就像 🔳一样。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="transformer"> 变换者。 </param>
      <param name="accentColor"> 强调色。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawCrop(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.Transformer,System.Numerics.Matrix3x2,Windows.UI.Color)">
      <summary>
        在边界上绘制节点和线，就像 🔳一样。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="transformer"> 变换者。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="accentColor"> 强调色。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawBound(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.TransformerBorder)">
      <summary>
        在边界上画线。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="border"> 边界。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawBound(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.TransformerBorder,Windows.UI.Color)">
      <summary>
        在边界上画线。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="border"> 边界。 </param>
      <param name="accentColor"> 强调色。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawBoundNodes(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.TransformerBorder)">
      <summary>
        在边界上绘制节点和线，就像【由】一样。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="border"> 边界。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawBoundNodes(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.TransformerBorder,Windows.UI.Color)">
      <summary>
        在边界上绘制节点和线，就像【由】一样。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="border"> 边界。 </param>
      <param name="accentColor"> 强调色。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawCrop(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.TransformerBorder)">
      <summary>
        在边界上绘制节点和线，就像 🔳一样。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="border"> 边界。 </param>
    </member>
    <member name="M:FanKit.Transformers.CanvasDrawingSessionExtensions.DrawCrop(Microsoft.Graphics.Canvas.CanvasDrawingSession,FanKit.Transformers.TransformerBorder,Windows.UI.Color)">
      <summary>
        在边界上绘制节点和线，就像 🔳一样。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="border"> 边界。 </param>
      <param name="accentColor"> 强调色。 </param>
    </member>
    <member name="T:FanKit.Transformers.IndicatorModeExtensions">
      <summary>
        <see cref="T:FanKit.Transformers.IndicatorMode"/> 的扩展。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.IndicatorModeExtensions.ToHorizontalAlignment(FanKit.Transformers.IndicatorMode)">
      <summary>
        转换为 <see cref="T:Windows.UI.Xaml.HorizontalAlignment"/>。
      </summary>
      <param name="indicatorMode"> 指示器模式。 </param>
      <returns> 产生的对齐方式。 </returns>
    </member>
    <member name="M:FanKit.Transformers.IndicatorModeExtensions.ToVerticalAlignment(FanKit.Transformers.IndicatorMode)">
      <summary>
        转换为 <see cref="T:Windows.UI.Xaml.VerticalAlignment"/>。
      </summary>
      <param name="indicatorMode"> 指示器模式。 </param>
      <returns> 产生的对齐方式。 </returns>
    </member>
    <member name="T:FanKit.Transformers.IGetActualTransformer">
      <summary>
        提供一个接口来获取变换者。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.IGetActualTransformer.GetActualTransformer">
      <summary>
        获取实际的变换者。
      </summary>
    </member>
    <member name="T:FanKit.Transformers.ITransformerGeometry">
      <summary>
        一个接口提供了一个用于转换几何形状的方法。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.ITransformerGeometry.ToRectangle(Microsoft.Graphics.Canvas.ICanvasResourceCreator)">
      <summary>
        转为几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.ITransformerGeometry.ToRectangle(Microsoft.Graphics.Canvas.ICanvasResourceCreator,System.Numerics.Matrix3x2)">
      <summary>
        转为几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="matrix"> 矩阵。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.ITransformerGeometry.ToEllipse(Microsoft.Graphics.Canvas.ICanvasResourceCreator)">
      <summary>
        转为几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.ITransformerGeometry.ToEllipse(Microsoft.Graphics.Canvas.ICanvasResourceCreator,System.Numerics.Matrix3x2)">
      <summary>
        转为几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="matrix"> 矩阵。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="T:FanKit.Transformers.ITransformerLTRB">
      <summary>
        提供四个位置（左上，右上，右下，左下角）的接口。
      </summary>
    </member>
    <member name="P:FanKit.Transformers.ITransformerLTRB.LeftTop">
      <summary> 获取左上角的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.ITransformerLTRB.RightTop">
      <summary> 获取右上角的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.ITransformerLTRB.RightBottom">
      <summary> 获取右下角的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.ITransformerLTRB.LeftBottom">
      <summary> 获取左下角的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.ITransformerLTRB.CenterX">
      <summary> 获取中心点的 X 轴值。 </summary>
    </member>
    <member name="P:FanKit.Transformers.ITransformerLTRB.CenterY">
      <summary> 获取中心点的 Y 轴位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.ITransformerLTRB.Center">
      <summary> 获取中心点的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.ITransformerLTRB.CenterLeft">
      <summary> 获取左下角和左上角的中心点的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.ITransformerLTRB.CenterTop">
      <summary> 获取左上角和右上角的中心点的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.ITransformerLTRB.CenterRight">
      <summary> 获取右上角和右下角的中心点的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.ITransformerLTRB.CenterBottom">
      <summary> 获取右下角和左下角的中心点的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.ITransformerLTRB.Horizontal">
      <summary> 获取水平向量。 </summary>
    </member>
    <member name="P:FanKit.Transformers.ITransformerLTRB.Vertical">
      <summary> 获取垂直向量。 </summary>
    </member>
    <member name="T:FanKit.Transformers.EachControlPointAngleMode">
      <summary>
        每个控制点的角度模式。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.EachControlPointAngleMode.None">
      <summary> 正常。 </summary>
    </member>
    <member name="F:FanKit.Transformers.EachControlPointAngleMode.Asymmetric">
      <summary> 原点对称。 </summary>
    </member>
    <member name="F:FanKit.Transformers.EachControlPointAngleMode.Fixed">
      <summary> 固定角度。 </summary>
    </member>
    <member name="T:FanKit.Transformers.EachControlPointLengthMode">
      <summary>
        每个控制点的长度模式。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.EachControlPointLengthMode.None">
      <summary> 正常。 </summary>
    </member>
    <member name="F:FanKit.Transformers.EachControlPointLengthMode.Equal">
      <summary> 长度相等。 </summary>
    </member>
    <member name="F:FanKit.Transformers.EachControlPointLengthMode.Ratio">
      <summary> 比率长度。 </summary>
    </member>
    <member name="T:FanKit.Transformers.Node">
      <summary>
        贝塞尔曲线的节点。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.Node.Sharp">
      <summary>
        锐化。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.Node.Smooth(System.Numerics.Vector2)">
      <summary>
        顺利。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.Node.Contained(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        该矢量包含在矩形中。
      </summary>
      <param name="left"> 目标矩形的左侧的 X 轴值。 </param>
      <param name="top"> 目标矩形的顶部的 Y 轴位置。 </param>
      <param name="right"> 目标矩形的右侧的 X 轴值。 </param>
      <param name="bottom"> 目标矩形的底部的 Y 轴位置。 </param>
      <returns> 如果向量包含在矩形中，则返回**true**，否则返回**false**。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Node.Contained(FanKit.Transformers.TransformerRect)">
      <summary>
        该矢量包含在一个矩形中。
      </summary>
      <param name="rect"> 目标矩形。 </param>
      <returns> 如果向量包含在矩形中，则返回**true**。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Node.ContainsNodeMode(System.Numerics.Vector2,FanKit.Transformers.Node)">
      <summary>
        获取包含指定点的节点。
      </summary>
      <param name="point"> 输入点。 </param>
      <param name="node"> 源节点。 </param>
      <returns> 节点模式。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Node.ContainsNodeMode(System.Numerics.Vector2,FanKit.Transformers.Node,System.Numerics.Matrix3x2)">
      <summary>
        获取包含指定点的节点。
      </summary>
      <param name="point"> 输入点。 </param>
      <param name="node"> 源节点。 </param>
      <param name="matrix"> 矩阵。 </param>
      <returns> 节点模式。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Node.Move(System.Numerics.Vector2,FanKit.Transformers.Node)">
      <summary>
        移动
      </summary>
      <param name="point"> 点。 </param>
      <param name="node"> 节点。 </param>
    </member>
    <member name="M:FanKit.Transformers.Node.Controller(FanKit.Transformers.SelfControlPointMode,FanKit.Transformers.EachControlPointLengthMode,FanKit.Transformers.EachControlPointAngleMode,System.Numerics.Vector2,FanKit.Transformers.Node,System.Boolean)">
      <summary>
        它控制节点控制点的变换。
      </summary>
      <param name="mode"> 模式。 </param>
      <param name="lengthMode"> 长度模式。 </param>
      <param name="angleMode"> 角度模式。 </param>
      <param name="point"> 点。 </param>
      <param name="node"> 节点。 </param>
      <param name="isLeftControlPoint">
        <see cref="F:FanKit.Transformers.Node.LeftControlPoint"/> 或 <see cref="F:FanKit.Transformers.Node.RightControlPoint"/>。
      </param>
      <returns> 受控制的节点。 </returns>
    </member>
    <member name="P:FanKit.Transformers.Node.Type">
      <summary> 获取或设置类型。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Node.FigureFill">
      <summary> 获取或设置图形填充。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Node.FigureLoop">
      <summary> 获取或设置图形循环。 </summary>
    </member>
    <member name="F:FanKit.Transformers.Node.Point">
      <summary> 点。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Node.StartingPoint">
      <summary>
        <see cref="F:FanKit.Transformers.Node.Point"/> 的缓存。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.Node.LeftControlPoint">
      <summary> 左侧的指定控制点。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Node.StartingLeftControlPoint">
      <summary>
        <see cref="F:FanKit.Transformers.Node.LeftControlPoint"/> 的缓存。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.Node.RightControlPoint">
      <summary> 右侧的指定控制点。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Node.StartingRightControlPoint">
      <summary>
        <see cref="F:FanKit.Transformers.Node.RightControlPoint"/> 的缓存。
      </summary>
    </member>
    <member name="P:FanKit.Transformers.Node.IsChecked">
      <summary> 获取或设置节点的是否选中。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Node.StartingIsChecked">
      <summary>
        <see cref="P:FanKit.Transformers.Node.IsChecked"/> 的缓存。
      </summary>
    </member>
    <member name="P:FanKit.Transformers.Node.IsSmooth">
      <summary> 获取或设置节点是否平滑。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Node.StartingIsSmooth">
      <summary>
        <see cref="P:FanKit.Transformers.Node.IsSmooth"/> 的缓存。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.Node.Clone">
      <summary>
        获取自己的副本。
      </summary>
      <returns> 克隆的节点。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Node.CacheTransform">
      <summary>
        缓存节点的变换者。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.Node.TransformAdd(System.Numerics.Vector2)">
      <summary>
        通过给定的向量变换节点。
      </summary>
      <param name="vector"> 用于相加的加值。 </param>
    </member>
    <member name="M:FanKit.Transformers.Node.TransformMultiplies(System.Numerics.Matrix3x2)">
      <summary>
        通过给定的矩阵变换节点。
      </summary>
      <param name="matrix"> 结果矩阵。 </param>
    </member>
    <member name="T:FanKit.Transformers.SelfControlPointMode">
      <summary>
        自我控制点的限制方式。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.SelfControlPointMode.None">
      <summary> 正常。 </summary>
    </member>
    <member name="F:FanKit.Transformers.SelfControlPointMode.Angle">
      <summary> 不改变角度。 </summary>
    </member>
    <member name="F:FanKit.Transformers.SelfControlPointMode.Length">
      <summary> 不改变长度。 </summary>
    </member>
    <member name="F:FanKit.Transformers.SelfControlPointMode.Disable">
      <summary> 禁用控制点。 </summary>
    </member>
    <member name="T:FanKit.Transformers.InputDevice">
      <summary>
        <see cref="T:FanKit.Transformers.CanvasOperator"/> 的输入设备类型。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.InputDevice.None">
      <summary> 正常。 </summary>
    </member>
    <member name="F:FanKit.Transformers.InputDevice.Indeterminacy">
      <summary> 不确定。 </summary>
    </member>
    <member name="F:FanKit.Transformers.InputDevice.Holding">
      <summary> 长按。 </summary>
    </member>
    <member name="F:FanKit.Transformers.InputDevice.SingleFinger">
      <summary> 单指。 </summary>
    </member>
    <member name="F:FanKit.Transformers.InputDevice.DoubleFinger">
      <summary> 双指。 </summary>
    </member>
    <member name="F:FanKit.Transformers.InputDevice.Pen">
      <summary> 钢笔。 </summary>
    </member>
    <member name="F:FanKit.Transformers.InputDevice.Eraser">
      <summary> 橡皮。 </summary>
    </member>
    <member name="F:FanKit.Transformers.InputDevice.LeftButton">
      <summary> 鼠标右键。 </summary>
    </member>
    <member name="F:FanKit.Transformers.InputDevice.RightButton">
      <summary> 鼠标右键。 </summary>
    </member>
    <member name="T:FanKit.Transformers.MarqueeTool">
      <summary>
        可以选择矩形和椭圆形的选区框工具。
      </summary>
    </member>
    <member name="P:FanKit.Transformers.MarqueeTool.IsStarted">
      <summary> 获取或设置是否正在使用该工具。 </summary>
    </member>
    <member name="P:FanKit.Transformers.MarqueeTool.TransformerRect">
      <summary> 获取矩形或椭圆形工具的变换者矩形。 </summary>
    </member>
    <member name="P:FanKit.Transformers.MarqueeTool.Points">
      <summary> 获取多边形或自由手工具的点。 </summary>
    </member>
    <member name="M:FanKit.Transformers.MarqueeTool.Start(System.Numerics.Vector2,FanKit.Transformers.MarqueeToolType,System.Boolean,System.Boolean)">
      <summary>
        开始使用选区框工具。
      </summary>
      <param name="point"> 点。 </param>
      <param name="toolType"> 工具类型。 </param>
      <param name="isCenter"> 围绕中心缩放。 </param>
      <param name="isSquare"> 宽度和高度相等。 </param>
    </member>
    <member name="M:FanKit.Transformers.MarqueeTool.Delta(System.Numerics.Vector2,System.Numerics.Vector2,FanKit.Transformers.MarqueeToolType,System.Boolean,System.Boolean)">
      <summary>
        在使用选区框工具。
      </summary>
      <param name="startingPoint"> 起始点。 </param>
      <param name="point"> 点。 </param>
      <param name="toolType"> 工具类型。 </param>
      <param name="isCenter"> 围绕中心缩放。 </param>
      <param name="isSquare"> 宽度和高度相等。 </param>
    </member>
    <member name="M:FanKit.Transformers.MarqueeTool.Complete(System.Numerics.Vector2,System.Numerics.Vector2,FanKit.Transformers.MarqueeToolType,System.Boolean,System.Boolean)">
      <summary>
        最后使用选区框工具。
      </summary>
      <param name="startingPoint"> 起始点。 </param>
      <param name="point"> 点。 </param>
      <param name="toolType"> 工具类型。 </param>
      <param name="isCenter"> 围绕中心缩放。 </param>
      <param name="isSquare"> 宽度和高度相等。 </param>
      <returns> 如果需要重绘选区，则返回**true**，否则返回**false**。 </returns>
    </member>
    <member name="M:FanKit.Transformers.MarqueeTool.Complete(System.Numerics.Vector2,System.Numerics.Vector2,FanKit.Transformers.MarqueeToolType,System.Numerics.Matrix3x2,System.Boolean,System.Boolean)">
      <summary>
        最后使用选区框工具。
      </summary>
      <param name="startingPoint"> 起始点。 </param>
      <param name="point"> 点。 </param>
      <param name="toolType"> 工具类型。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="isCenter"> 围绕中心缩放。 </param>
      <param name="isSquare"> 宽度和高度相等。 </param>
      <returns> 如果需要重绘选区，则返回**true**，否则返回**false**。 </returns>
    </member>
    <member name="T:FanKit.Transformers.SingleHandler">
      <summary>
        表示处理 <see cref="E:FanKit.Transformers.CanvasOperator.Single_Start"/> ， <see cref="E:FanKit.Transformers.CanvasOperator.Single_Delta"/> ， <see cref="E:FanKit.Transformers.CanvasOperator.Single_Complete"/>  事件的方法。
      </summary>
      <param name="point"> 触控点的位置。 </param>
      <param name="device"> 当前输入设备。 </param>
      <param name="properties"> 触控点的属性。 </param>
    </member>
    <member name="T:FanKit.Transformers.RightHandler">
      <summary>
        表示处理 <see cref="E:FanKit.Transformers.CanvasOperator.Right_Start"/> ， <see cref="E:FanKit.Transformers.CanvasOperator.Right_Delta"/> ， <see cref="E:FanKit.Transformers.CanvasOperator.Right_Complete"/>  事件的方法。
      </summary>
      <param name="point"> 鼠标指针的位置。 </param>
      <param name="isHolding">
        <see cref="E:Windows.UI.Xaml.UIElement.Holding"/>。
      </param>
    </member>
    <member name="T:FanKit.Transformers.DoubleHandler">
      <summary>
        表示处理 <see cref="E:FanKit.Transformers.CanvasOperator.Double_Start"/> ， <see cref="E:FanKit.Transformers.CanvasOperator.Double_Delta"/> ， <see cref="E:FanKit.Transformers.CanvasOperator.Double_Complete"/>  事件的方法。
      </summary>
      <param name="center"> 两只手指的中心。 </param>
      <param name="space"> 双指之间的间距。 </param>
    </member>
    <member name="T:FanKit.Transformers.CanvasOperator">
      <summary>
        提供单指，双指移动事件到画布控件的指针事件。
      </summary>
    </member>
    <member name="P:FanKit.Transformers.CanvasOperator.Device">
      <summary>
        获取当前设备类型。
      </summary>
    </member>
    <member name="P:FanKit.Transformers.CanvasOperator.TouchMode">
      <summary>
        获取或设置触控模式。
      </summary>
    </member>
    <member name="P:FanKit.Transformers.CanvasOperator.DestinationControl">
      <summary>
        <see cref="T:FanKit.Transformers.CanvasOperator"/> 的目标控件。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.CanvasOperator.DestinationControlProperty">
      <summary>
        标识 <see cref="P:FanKit.Transformers.CanvasOperator.DestinationControl"/> 依赖属性。
      </summary>
    </member>
    <member name="E:FanKit.Transformers.CanvasOperator.Single_Start">
      <summary> 在单指|鼠标左键|笔事件开始时发生。 </summary>
    </member>
    <member name="E:FanKit.Transformers.CanvasOperator.Single_Delta">
      <summary> 在单指|鼠标左键|笔事件更改时发生。 </summary>
    </member>
    <member name="E:FanKit.Transformers.CanvasOperator.Single_Complete">
      <summary> 在单指|鼠标左键|笔事件完成时发生。 </summary>
    </member>
    <member name="E:FanKit.Transformers.CanvasOperator.Right_Start">
      <summary> 在鼠标右键|单指长按事件开始时发生。 </summary>
    </member>
    <member name="E:FanKit.Transformers.CanvasOperator.Right_Delta">
      <summary> 在鼠标右键|单指长按事件更改时发生。 </summary>
    </member>
    <member name="E:FanKit.Transformers.CanvasOperator.Right_Complete">
      <summary> 在鼠标右键|单指长按事件完成时发生。 </summary>
    </member>
    <member name="E:FanKit.Transformers.CanvasOperator.Double_Start">
      <summary> 在双指事件开始时发生。 </summary>
    </member>
    <member name="E:FanKit.Transformers.CanvasOperator.Double_Delta">
      <summary> 在双指事件更改时发生。 </summary>
    </member>
    <member name="E:FanKit.Transformers.CanvasOperator.Double_Complete">
      <summary> 在双指事件完成时发生。 </summary>
    </member>
    <member name="E:FanKit.Transformers.CanvasOperator.Wheel_Changed">
      <summary>
        在指针滚轮的增量值更改时发生。
      </summary>
    </member>
    <member name="T:FanKit.Transformers.ICacheTransform">
      <summary>
        为变换中的图形类提供接口。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.ICacheTransform.CacheTransform">
      <summary>
        缓存类的变换者。
        例如：起始变换者 = 变换者。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.ICacheTransform.TransformMultiplies(System.Numerics.Matrix3x2)">
      <summary>
        通过给定的矩阵变换类。
        例如：变换者.相乘(）
      </summary>
      <param name="matrix"> 结果矩阵。 </param>
    </member>
    <member name="M:FanKit.Transformers.ICacheTransform.TransformAdd(System.Numerics.Vector2)">
      <summary>
        通过给定的向量变换类。
        例如：变换者.相加(）
      </summary>
      <param name="vector"> 用于相加的加值。 </param>
    </member>
    <member name="T:FanKit.Transformers.Icon">
      <summary>
        <see cref="N:FanKit.Transformers"/> 的图标。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.Icon.#ctor">
      <summary>
        初始化一个 <see cref="T:FanKit.Transformers.Icon"/>。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.Icon.InitializeComponent">
      <summary>
        初始化组件()
      </summary>
    </member>
    <member name="M:FanKit.Transformers.Icon.Connect(System.Int32,System.Object)">
      <summary>
        连接()
      </summary>
    </member>
    <member name="M:FanKit.Transformers.Icon.GetBindingConnector(System.Int32,System.Object)">
      <summary>
        GetBindingConnector(int connectionId, object target)
      </summary>
    </member>
    <member name="T:FanKit.Transformers.IndicatorControl">
      <summary>
        表示一个指示变换者中心点的控件。
      </summary>
    </member>
    <member name="E:FanKit.Transformers.IndicatorControl.ModeChanged">
      <summary>
        单击不同的小方块以触发 <see cref="E:FanKit.Transformers.IndicatorControl.ModeChanged"/> 事件。
      </summary>
    </member>
    <member name="P:FanKit.Transformers.IndicatorControl.Mode">
      <summary>
        获取或设置 <see cref="T:FanKit.Transformers.IndicatorControl"/> 的模式。
      </summary>
    </member>
    <member name="P:FanKit.Transformers.IndicatorControl.Radians">
      <summary> 旋转弧度。 </summary>
    </member>
    <member name="M:FanKit.Transformers.IndicatorControl.#ctor">
      <summary>
        初始化 <see cref="T:FanKit.Transformers.IndicatorControl"/>。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.IndicatorControl.InitializeComponent">
      <summary>
        初始化组件()
      </summary>
    </member>
    <member name="M:FanKit.Transformers.IndicatorControl.Connect(System.Int32,System.Object)">
      <summary>
        连接()
      </summary>
    </member>
    <member name="M:FanKit.Transformers.IndicatorControl.GetBindingConnector(System.Int32,System.Object)">
      <summary>
        GetBindingConnector(int connectionId, object target)
      </summary>
    </member>
    <member name="T:FanKit.Transformers.IndicatorMode">
      <summary>
        <see cref="T:FanKit.Transformers.IndicatorControl"/> 的模式。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.IndicatorMode.None">
      <summary> 正常。 </summary>
    </member>
    <member name="F:FanKit.Transformers.IndicatorMode.LeftTop">
      <summary>
        <see cref="P:FanKit.Transformers.Transformer.LeftTop"/>。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.IndicatorMode.RightTop">
      <summary>
        <see cref="P:FanKit.Transformers.Transformer.RightTop"/>。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.IndicatorMode.RightBottom">
      <summary>
        <see cref="P:FanKit.Transformers.Transformer.RightBottom"/>。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.IndicatorMode.LeftBottom">
      <summary>
        <see cref="P:FanKit.Transformers.Transformer.LeftBottom"/>。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.IndicatorMode.Left">
      <summary>
        <see cref="P:FanKit.Transformers.Transformer.CenterLeft"/>。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.IndicatorMode.Top">
      <summary>
        <see cref="P:FanKit.Transformers.Transformer.CenterTop"/>。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.IndicatorMode.Right">
      <summary>
        <see cref="P:FanKit.Transformers.Transformer.CenterRight"/>。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.IndicatorMode.Bottom">
      <summary>
        <see cref="P:FanKit.Transformers.Transformer.CenterBottom"/>。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.IndicatorMode.Center">
      <summary>
        <see cref="P:FanKit.Transformers.Transformer.Center"/>。
      </summary>
    </member>
    <member name="T:FanKit.Transformers.IndicatorModeHandler">
      <summary>
        表示对 <see cref="E:FanKit.Transformers.IndicatorControl.ModeChanged"/> 事件的处理的方法。
      </summary>
      <param name="sender"> 事件处理程序附加到的对象。 </param>
      <param name="mode"> 指示器模式。 </param>
    </member>
    <member name="T:FanKit.Transformers.InverseMatrixTransformerMode">
      <summary>
        <see cref="T:FanKit.Transformers.CanvasTransformer"/> 的逆矩阵模式。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.InverseMatrixTransformerMode.ControlToVirtualToCanvas">
      <summary> 控件>虚拟>画布。 </summary>
    </member>
    <member name="F:FanKit.Transformers.InverseMatrixTransformerMode.ControlToVirtual">
      <summary> 控件>虚拟。 </summary>
    </member>
    <member name="F:FanKit.Transformers.InverseMatrixTransformerMode.VirtualToCanvas">
      <summary> 虚拟>画布。 </summary>
    </member>
    <member name="T:FanKit.Transformers.LineDistance">
      <summary>
        直线上这些点上的点的距离：
        ------ D [对角点]，C [中心点]，P [点]和F[垂足]。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.LineDistance.FC">
      <summary> [垂足]和[中心点]之间的距离。 </summary>
    </member>
    <member name="F:FanKit.Transformers.LineDistance.FP">
      <summary> [英尺点]和[点]之间的距离。 </summary>
    </member>
    <member name="F:FanKit.Transformers.LineDistance.FD">
      <summary> [垂足]和[对角点]之间的距离。 </summary>
    </member>
    <member name="F:FanKit.Transformers.LineDistance.PC">
      <summary> [点]和[中心点]之间的距离。 </summary>
    </member>
    <member name="M:FanKit.Transformers.LineDistance.Scale(FanKit.Transformers.LineDistance)">
      <summary> [垂足][中心点]的缩放 / [点][中心点]的缩放（可能为负） </summary>
      <param name="distance"> 距离 </param>
      <returns> 缩放 </returns>
    </member>
    <member name="T:FanKit.Transformers.MatrixTransformerMode">
      <summary>
        <see cref="T:FanKit.Transformers.CanvasTransformer"/> 的矩阵模式。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.MatrixTransformerMode.CanvasToVirtualToControl">
      <summary> 画布>虚拟>控件。 </summary>
    </member>
    <member name="F:FanKit.Transformers.MatrixTransformerMode.CanvasToVirtual">
      <summary> 画布>虚拟。 </summary>
    </member>
    <member name="F:FanKit.Transformers.MatrixTransformerMode.VirtualToControl">
      <summary> 虚拟>控制。 </summary>
    </member>
    <member name="T:FanKit.Transformers.TouchMode">
      <summary>
        <see cref="T:FanKit.Transformers.CanvasOperator"/> 的触控模式。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.TouchMode.Disable">
      <summary> 禁用。 </summary>
    </member>
    <member name="F:FanKit.Transformers.TouchMode.SingleFinger">
      <summary>
        <see cref="F:FanKit.Transformers.InputDevice.SingleFinger"/>。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.TouchMode.RightButton">
      <summary>
        <see cref="F:FanKit.Transformers.InputDevice.RightButton"/>。
      </summary>
    </member>
    <member name="T:FanKit.Transformers.RemoteControl">
      <summary>
        表示一个用来遥控变换者的控件。
      </summary>
    </member>
    <member name="E:FanKit.Transformers.RemoteControl.ValueChangeStarted">
      <summary> 在值改变开始时发生。 </summary>
    </member>
    <member name="E:FanKit.Transformers.RemoteControl.ValueChangeDelta">
      <summary> 在值改变更改时发生。 </summary>
    </member>
    <member name="E:FanKit.Transformers.RemoteControl.ValueChangeCompleted">
      <summary> 在值改变完成时发生。 </summary>
    </member>
    <member name="E:FanKit.Transformers.RemoteControl.Moved">
      <summary>
        单击周围的按钮以触发 <see cref="E:FanKit.Transformers.RemoteControl.Moved"/> 事件。
      </summary>
    </member>
    <member name="P:FanKit.Transformers.RemoteControl.RemoteCenter">
      <summary>
        遥控的中心。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.RemoteControl.#ctor">
      <summary>
        初始化一个 <see cref="T:FanKit.Transformers.RemoteControl"/>。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.RemoteControl.InitializeComponent">
      <summary>
        初始化组件()
      </summary>
    </member>
    <member name="M:FanKit.Transformers.RemoteControl.Connect(System.Int32,System.Object)">
      <summary>
        连接()
      </summary>
    </member>
    <member name="M:FanKit.Transformers.RemoteControl.GetBindingConnector(System.Int32,System.Object)">
      <summary>
        GetBindingConnector(int connectionId, object target)
      </summary>
    </member>
    <member name="T:FanKit.Transformers.RemoteVectorHandler">
      <summary>
        表示值改变事件处理的方法。
      </summary>
      <param name="sender"> 事件处理程序附加到的对象。 </param>
      <param name="value"> 事件数据。 </param>
    </member>
    <member name="T:FanKit.Transformers.BorderSnapBase`1">
      <summary>
        <see cref="T:FanKit.Transformers.TransformerBorder"/> 的吸附工具。
      </summary>
      <typeparam name="D"> 目标类型。 </typeparam>
    </member>
    <member name="P:FanKit.Transformers.BorderSnapBase`1.StartingSource">
      <summary>
        <see cref="P:FanKit.Transformers.SnapBase`2.Source"/> 的缓存。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.BorderSnapBase`1.XGap">
      <summary> X 轴间隙。 </summary>
    </member>
    <member name="F:FanKit.Transformers.BorderSnapBase`1.YGap">
      <summary> Y 轴间隙。 </summary>
    </member>
    <member name="M:FanKit.Transformers.BorderSnapBase`1.Snap(System.Numerics.Vector2)">
      <summary>
        吸附
      </summary>
      <param name="move"> 移动向量。 </param>
      <returns> 产生的向量。 </returns>
    </member>
    <member name="M:FanKit.Transformers.BorderSnapBase`1.SetSnapMove(System.Numerics.Vector2)">
      <summary>
        设置 <see cref="F:FanKit.Transformers.SnapBase`2.XSnap"/> 和 <see cref="F:FanKit.Transformers.SnapBase`2.XSnap"/>。
      </summary>
      <param name="move"> 移动向量。 </param>
    </member>
    <member name="M:FanKit.Transformers.BorderSnapBase`1.GetSnapMove">
      <summary>
        获取 <see cref="F:FanKit.Transformers.SnapBase`2.XSnap"/> 和 <see cref="F:FanKit.Transformers.SnapBase`2.XSnap"/>。
      </summary>
      <returns> 产生的向量。 </returns>
    </member>
    <member name="M:FanKit.Transformers.BorderSnapBase`1.SetXSnapMove(System.Single,`0)">
      <summary>
        设置 <see cref="F:FanKit.Transformers.SnapBase`2.XSnap"/>。
      </summary>
      <param name="moveX"> 移动 X。 </param>
      <param name="destination"> 目标。 </param>
      <returns>
        <see cref="F:FanKit.Transformers.SnapBase`2.IsXSnap"/>
      </returns>
    </member>
    <member name="M:FanKit.Transformers.BorderSnapBase`1.SetYSnapMove(System.Single,`0)">
      <summary>
        设置 <see cref="F:FanKit.Transformers.SnapBase`2.YSnap"/>。
      </summary>
      <param name="moveY"> 移动 Y。 </param>
      <param name="destination"> 目标。 </param>
      <returns>
        <see cref="F:FanKit.Transformers.SnapBase`2.IsYSnap"/>
      </returns>
    </member>
    <member name="T:FanKit.Transformers.VectorVectorSnap">
      <summary>
        <see cref="T:System.Numerics.Vector2"/> 的吸附工具。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.VectorVectorSnap.SetXSnap(System.Single,System.Numerics.Vector2)">
      <summary>
        设置 <see cref="F:FanKit.Transformers.SnapBase`2.XSnap"/>。
      </summary>
      <param name="pointX"> 点 X。 </param>
      <param name="destination"> 目标。 </param>
      <returns>
        <see cref="F:FanKit.Transformers.SnapBase`2.IsXSnap"/>
      </returns>
    </member>
    <member name="M:FanKit.Transformers.VectorVectorSnap.SetYSnap(System.Single,System.Numerics.Vector2)">
      <summary>
        设置 <see cref="F:FanKit.Transformers.SnapBase`2.YSnap"/>。
      </summary>
      <param name="pointY"> 点 Y。 </param>
      <param name="destination"> 目标。 </param>
      <returns>
        <see cref="F:FanKit.Transformers.SnapBase`2.IsYSnap"/>
      </returns>
    </member>
    <member name="M:FanKit.Transformers.VectorVectorSnap.XTop">
      <summary> X 轴顶部。 </summary>
    </member>
    <member name="M:FanKit.Transformers.VectorVectorSnap.XBottom">
      <summary> X 轴底部。 </summary>
    </member>
    <member name="M:FanKit.Transformers.VectorVectorSnap.YLeft">
      <summary> Y 轴向左。 </summary>
    </member>
    <member name="M:FanKit.Transformers.VectorVectorSnap.YRight">
      <summary> Y 轴向右。 </summary>
    </member>
    <member name="T:FanKit.Transformers.VectorSnapBase`1">
      <summary>
        <see cref="T:System.Numerics.Vector2"/> 的吸附工具。
      </summary>
      <typeparam name="D"> 目标类型。 </typeparam>
    </member>
    <member name="M:FanKit.Transformers.VectorSnapBase`1.Snap(System.Numerics.Vector2)">
      <summary>
        吸附
      </summary>
      <param name="point"> 点。 </param>
      <returns> 产生的向量。 </returns>
    </member>
    <member name="M:FanKit.Transformers.VectorSnapBase`1.SetSnap(System.Numerics.Vector2)">
      <summary>
        设置 <see cref="F:FanKit.Transformers.SnapBase`2.XSnap"/> 和 <see cref="F:FanKit.Transformers.SnapBase`2.XSnap"/>。
      </summary>
      <param name="point"> 点。 </param>
    </member>
    <member name="M:FanKit.Transformers.VectorSnapBase`1.GetSnap(System.Numerics.Vector2)">
      <summary>
        获取 <see cref="F:FanKit.Transformers.SnapBase`2.XSnap"/> 和 <see cref="F:FanKit.Transformers.SnapBase`2.XSnap"/>。
      </summary>
      <returns> 产生的向量。 </returns>
    </member>
    <member name="M:FanKit.Transformers.VectorSnapBase`1.SetXSnap(System.Single,`0)">
      <summary>
        设置 <see cref="F:FanKit.Transformers.SnapBase`2.XSnap"/>。
      </summary>
      <param name="pointX"> 点 X。 </param>
      <param name="destination"> 目标。 </param>
      <returns>
        <see cref="F:FanKit.Transformers.SnapBase`2.IsXSnap"/>
      </returns>
    </member>
    <member name="M:FanKit.Transformers.VectorSnapBase`1.SetYSnap(System.Single,`0)">
      <summary>
        设置 <see cref="F:FanKit.Transformers.SnapBase`2.YSnap"/>。
      </summary>
      <param name="pointY"> 点 Y。 </param>
      <param name="destination"> 目标。 </param>
      <returns>
        <see cref="F:FanKit.Transformers.SnapBase`2.IsYSnap"/>
      </returns>
    </member>
    <member name="M:FanKit.Transformers.VectorSnapBase`1.DrawNode2(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Numerics.Matrix3x2)">
      <summary>
        绘制 ⊙。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="matrix"> 矩阵。 </param>
    </member>
    <member name="T:FanKit.Transformers.VectorBorderSnap">
      <summary>
        <see cref="T:System.Numerics.Vector2"/> 的吸附工具<请see cref="T:FanKit.Transformers.TransformerBorder"/>。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.VectorBorderSnap.SetXSnap(System.Single,FanKit.Transformers.TransformerBorder)">
      <summary>
        设置 <see cref="F:FanKit.Transformers.SnapBase`2.XSnap"/>。
      </summary>
      <param name="pointX"> 点 X。 </param>
      <param name="destination"> 目标。 </param>
      <returns>
        <see cref="F:FanKit.Transformers.SnapBase`2.IsXSnap"/>
      </returns>
    </member>
    <member name="M:FanKit.Transformers.VectorBorderSnap.SetYSnap(System.Single,FanKit.Transformers.TransformerBorder)">
      <summary>
        设置 <see cref="F:FanKit.Transformers.SnapBase`2.YSnap"/>。
      </summary>
      <param name="pointY"> 点 Y。 </param>
      <param name="destination"> 目标。 </param>
      <returns>
        <see cref="F:FanKit.Transformers.SnapBase`2.IsYSnap"/>
      </returns>
    </member>
    <member name="M:FanKit.Transformers.VectorBorderSnap.XTop">
      <summary> X 轴顶部。 </summary>
    </member>
    <member name="M:FanKit.Transformers.VectorBorderSnap.XBottom">
      <summary> X 轴底部。 </summary>
    </member>
    <member name="M:FanKit.Transformers.VectorBorderSnap.YLeft">
      <summary> Y 轴向左。 </summary>
    </member>
    <member name="M:FanKit.Transformers.VectorBorderSnap.YRight">
      <summary> Y 轴向右。 </summary>
    </member>
    <member name="T:FanKit.Transformers.Transformer">
      <summary>
        封装四个位置（左上，右上，右下，左下角）的结构体。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.Transformer.CreateWithAspectRatio(System.Numerics.Vector2,System.Numerics.Vector2,System.Single,System.Single)">
      <summary>
        创建一个固定宽高比例的变换者。
      </summary>
      <param name="startingPoint"> 起始点。 </param>
      <param name="point"> 点。 </param>
      <param name="sizeWidth"> 源宽度。 </param>
      <param name="sizeHeight"> 源高度。 </param>
      <returns> 提供的变换者。 </returns>
    </member>
    <member name="P:FanKit.Transformers.Transformer.LeftTop">
      <summary> 获取或设置变换者的左上角的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Transformer.RightTop">
      <summary> 获取或设置变换者的右上角的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Transformer.RightBottom">
      <summary> 获取或设置变换者的右下角的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Transformer.LeftBottom">
      <summary> 获取或设置变换者的左下角的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Transformer.CenterX">
      <summary> 获取变换者的中心点的 X 轴值。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Transformer.CenterY">
      <summary> 获取变换者的中心点的 Y 轴位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Transformer.Center">
      <summary> 获取变换者的中心点的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Transformer.CenterLeft">
      <summary> 获取变换者的左下角和左上角的中心点的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Transformer.CenterTop">
      <summary> 获取变换者的左上角和右上角的中心点的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Transformer.CenterRight">
      <summary> 获取变换者的右上角和右下角的中心点的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Transformer.CenterBottom">
      <summary> 获取变换者的右下角和左下角的中心点的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Transformer.MinX">
      <summary> 获取变换者的所有角的 X 轴值的最小值。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Transformer.MaxX">
      <summary> 获取变换者的所有角的 X 轴值的最大值。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Transformer.MinY">
      <summary> 获取变换者的所有角的 Y 轴位置的最小位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Transformer.MaxY">
      <summary> 获取变换者的所有角的 Y 轴位置的最大位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Transformer.Horizontal">
      <summary> 获取变换者的水平向量。 </summary>
    </member>
    <member name="P:FanKit.Transformers.Transformer.Vertical">
      <summary> 获取变换者的垂直向量。 </summary>
    </member>
    <member name="M:FanKit.Transformers.Transformer.GetBorderValue(FanKit.Transformers.BorderMode)">
      <summary>
        通过左，右，上，下获取值。
      </summary>
      <param name="borderMode"> 边界模式。 </param>
      <returns> 产生的值。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.GetIndicatorVector(FanKit.Transformers.IndicatorMode)">
      <summary>
        按左，右，上，下获取向量。
      </summary>
      <param name="indicatorMode"> 指示器模式。 </param>
      <returns> 产生的向量。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.ContainsNodeMode(System.Numerics.Vector2,FanKit.Transformers.Transformer,System.Boolean)">
      <summary>
        通过包含指定点的变换者获取所有节点。
      </summary>
      <param name="point"> 输入点。 </param>
      <param name="transformer"> 源变换者。 </param>
      <param name="disabledRadian"> 是否禁用弧度。 </param>
      <returns> 变换者模式。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.ContainsNodeMode(System.Numerics.Vector2,FanKit.Transformers.Transformer,System.Numerics.Matrix3x2,System.Boolean)">
      <summary>
        通过包含指定点的变换者获取所有节点。
      </summary>
      <param name="point"> 输入点。 </param>
      <param name="transformer"> 源变换者。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="disabledRadian"> 是否禁用弧度。 </param>
      <returns> 变换者模式。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.FillContainsPoint(System.Numerics.Vector2)">
      <summary>
        返回由变换者填充的区域是否包含指定的点。
      </summary>
      <param name="point"> 点。 </param>
      <returns> 如果变换者填充的区域包含指定点，则返回**true**，否则返回**false**。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.Contained(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        返回该变换者是否包含在矩形中。
      </summary>
      <param name="left"> 目标矩形的左侧的 X 轴值。 </param>
      <param name="top"> 目标矩形的顶部的 Y 轴位置。 </param>
      <param name="right"> 目标矩形的右侧的 X 轴值。 </param>
      <param name="bottom"> 目标矩形的底部的 Y 轴位置。 </param>
      <returns> 如果变换者包含在矩形中，则返回**true**，否则返回**false**。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.Contained(FanKit.Transformers.TransformerRect)">
      <summary>
        变换者包含在一个矩形中。
      </summary>
      <param name="rect"> 目标矩形。 </param>
      <returns> 如果变换者包含在矩形中，则返回**true**，否则返回**false**。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.Controller(FanKit.Transformers.TransformerMode,System.Numerics.Vector2,System.Numerics.Vector2,FanKit.Transformers.Transformer,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        它控制变换者的变换。
      </summary>
      <param name="mode"> 模式。 </param>
      <param name="startingPoint"> 起始点。 </param>
      <param name="point"> 点。 </param>
      <param name="startingTransformer"> 起始变换者。 </param>
      <param name="isRatio"> 缩放时保持比例。 </param>
      <param name="isCenter"> 围绕中心缩放。 </param>
      <param name="isSnapToTick"> 是否旋转时吸附。 </param>
      <returns> 受控制的变换者。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.Controller(FanKit.Transformers.TransformerMode,System.Numerics.Vector2,System.Numerics.Vector2,FanKit.Transformers.Transformer,System.Numerics.Matrix3x2,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        它控制变换者的变换。
      </summary>
      <param name="mode"> 模式。 </param>
      <param name="startingPoint"> 起始点。 </param>
      <param name="point"> 点。 </param>
      <param name="startingTransformer"> 起始变换者。 </param>
      <param name="inverseMatrix"> 逆矩阵。 </param>
      <param name="isRatio"> 缩放时保持比例。 </param>
      <param name="isCenter"> 围绕中心缩放。 </param>
      <param name="isSnapToTick"> 是否旋转时吸附。 </param>
      <returns> 受控制的变换者。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.MoveLeftTop(System.Numerics.Vector2,System.Boolean)">
      <summary>
        移动变换者的左上角的位置。
      </summary>
      <param name="point"> 点。 </param>
      <param name="isConvexQuadrilateral"> 变换者是否是凸四边形？ </param>
      <returns> 产生的点。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.MoveRightTop(System.Numerics.Vector2,System.Boolean)">
      <summary>
        移动变换者的右上角的位置。
      </summary>
      <param name="point"> 点。 </param>
      <param name="isConvexQuadrilateral"> 变换者是否是凸四边形？ </param>
      <returns> 产生的点。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.MoveRightBottom(System.Numerics.Vector2,System.Boolean)">
      <summary>
        移动变换者的右下角的位置。
      </summary>
      <param name="point"> 点。 </param>
      <param name="isConvexQuadrilateral"> 变换者是否是凸四边形？ </param>
      <returns> 产生的点。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.MoveLeftBottom(System.Numerics.Vector2,System.Boolean)">
      <summary>
        移动变换者的左下角的位置。
      </summary>
      <param name="point"> 点。 </param>
      <param name="isConvexQuadrilateral"> 变换者是否是凸四边形？ </param>
      <returns> 产生的点。 </returns>
    </member>
    <member name="P:FanKit.Transformers.Transformer.One">
      <summary>
        返回变换者（-1,-1）（1,-1）（1,1）（-1,1）。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.Transformer.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        初始化变换者。
      </summary>
      <param name="left"> 边框的左侧的 X 轴值。 </param>
      <param name="top"> 边框的顶部的 Y 轴位置。 </param>
      <param name="right"> 边框的右侧的 X 轴值。 </param>
      <param name="bottom"> 边框的底部的 Y 轴位置。 </param>
    </member>
    <member name="M:FanKit.Transformers.Transformer.#ctor(FanKit.Transformers.TransformerRect)">
      <summary>
        初始化变换者。
      </summary>
      <param name="rect"> 边框矩形。 </param>
    </member>
    <member name="M:FanKit.Transformers.Transformer.#ctor(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>
        初始化变换者。
      </summary>
      <param name="pointA"> 新添加的变换者必须包含的第一个点。 </param>
      <param name="pointB"> 新添加的变换者必须包含的第二个点。 </param>
    </member>
    <member name="M:FanKit.Transformers.Transformer.#ctor(System.Numerics.Vector2,System.Numerics.Vector2,System.Boolean,System.Boolean)">
      <summary>
        初始化变换者。
      </summary>
      <param name="pointA"> 新添加的变换者必须包含的第一个点。 </param>
      <param name="pointB"> 新添加的变换者必须包含的第二个点。 </param>
      <param name="isCenter"> 围绕中心缩放。 </param>
      <param name="isRatio"> 缩放时保持比例。 </param>
    </member>
    <member name="M:FanKit.Transformers.Transformer.#ctor(System.Single,System.Single,System.Numerics.Vector2)">
      <summary>
        初始化变换者。
      </summary>
      <param name="width"> 变换者的宽度。 </param>
      <param name="height"> 变换者的高度。 </param>
      <param name="postion"> 变换者的左上角的位置。 </param>
    </member>
    <member name="M:FanKit.Transformers.Transformer.Add(FanKit.Transformers.Transformer,System.Numerics.Vector2)">
      <summary>
        将变换者和矢量相加。
      </summary>
      <param name="left"> 要相加的变换者。 </param>
      <param name="right"> 要相加的向量。 </param>
      <returns> 求和的变换者。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.Subtract(FanKit.Transformers.Transformer,System.Numerics.Vector2)">
      <summary>
        从变换者减去向量。
      </summary>
      <param name="left"> 变换者。 </param>
      <param name="right"> 向量。 </param>
      <returns> 相差的变换者。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.Multiplies(FanKit.Transformers.Transformer,System.Numerics.Matrix3x2)">
      <summary>
        将变换者和向量相乘，然后返回结果变换者。
      </summary>
      <param name="transformer"> 源变换者。 </param>
      <param name="matrix"> 变换矩阵。 </param>
      <returns> 产生的变换者。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.Divide(FanKit.Transformers.Transformer,System.Single)">
      <summary>
        以特定的缩放乘以变换者。
      </summary>
      <param name="left"> 要相乘的变换者。 </param>
      <param name="right"> 缩放值。 </param>
      <returns> 缩放的变换者。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.Divide(FanKit.Transformers.Transformer,System.Single)">
      <summary>
        以特定的缩放除以变换者。
      </summary>
      <param name="left"> 变换者。 </param>
      <param name="divisor"> 缩放值。 </param>
      <returns> 相除的结果变换者。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.op_Addition(FanKit.Transformers.Transformer,System.Numerics.Vector2)">
      <summary>
        将变换者和矢量相加。
      </summary>
      <param name="left"> 要相加的变换者。 </param>
      <param name="right"> 要相加的向量。 </param>
      <returns> 求和的变换者。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.op_Subtraction(FanKit.Transformers.Transformer,System.Numerics.Vector2)">
      <summary>
        从变换者减去向量。
      </summary>
      <param name="left"> 变换者。 </param>
      <param name="right"> 向量。 </param>
      <returns> 从变换者减去向量的结果变换者。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.op_Multiply(FanKit.Transformers.Transformer,System.Numerics.Matrix3x2)">
      <summary>
        将变换者和向量相乘，然后返回结果变换者。
      </summary>
      <param name="left"> 源变换者。 </param>
      <param name="right"> 要使用的缩放值。 </param>
      <returns> 生成的变换者。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.op_Multiply(FanKit.Transformers.Transformer,System.Single)">
      <summary>
        以特定的缩放值乘以特定的变换者。
      </summary>
      <param name="left"> 变换者。 </param>
      <param name="right"> 缩放值。 </param>
      <returns> 缩放的变换者。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.op_Division(FanKit.Transformers.Transformer,System.Single)">
      <summary>
        以特定的缩放除以变换者。
      </summary>
      <param name="left"> 变换者。 </param>
      <param name="right"> 缩放值。 </param>
      <returns> 相除的结果。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.Equals(FanKit.Transformers.Transformer)">
      <summary>
        返回一个布尔值，该布尔值指示给定的变换者是否等于此变换者实例。
      </summary>
      <param name="other"> 与该实例进行比较的变换者。 </param>
      <returns> 如果另一个变换者与此实例相等，则返回**true**，否则返回**false**。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.GetHashCode">
      <summary>
        返回此实例的哈希码。
      </summary>
      <returns> 一个是此实例的哈希码的 32 位有符号整型。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.op_Equality(FanKit.Transformers.Transformer,FanKit.Transformers.Transformer)">
      <summary>
        返回一个值，该值指示两个指定节点中的每对元素是否相等。
      </summary>
      <param name="left"> 第一个要比较的变换者。 </param>
      <param name="right"> 要比较的第二个变换者。 </param>
      <returns> 如果左右相等则返回**true**，否则返回**false**。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.op_Inequality(FanKit.Transformers.Transformer,FanKit.Transformers.Transformer)">
      <summary>
        返回一个布尔值，指示两个给定节点是否不相等。
      </summary>
      <param name="left"> 第一个要比较的变换者。 </param>
      <param name="right"> 要比较的第二个变换者。 </param>
      <returns> 如果节点不相等，则返回**true**；如果它们相等，则为假。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.ToRectangle(Microsoft.Graphics.Canvas.ICanvasResourceCreator)">
      <summary>
        转为几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.ToRectangle(Microsoft.Graphics.Canvas.ICanvasResourceCreator,System.Numerics.Matrix3x2)">
      <summary>
        转为几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="matrix"> 矩阵。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.ToEllipse(Microsoft.Graphics.Canvas.ICanvasResourceCreator)">
      <summary>
        转为几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.ToEllipse(Microsoft.Graphics.Canvas.ICanvasResourceCreator,System.Numerics.Matrix3x2)">
      <summary>
        转为几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="matrix"> 矩阵。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.FindHomography(System.Single,System.Single,FanKit.Transformers.ITransformerLTRB)">
      <summary>
        查找单应性。
      </summary>
      <param name="sourceWidth"> 源矩形的宽度 </param>
      <param name="sourceHeight"> 源矩形的高度 </param>
      <param name="destination"> 目标变换者。 </param>
      <returns> 单应性矩阵。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.FindHomography3D(System.Single,System.Single,FanKit.Transformers.ITransformerLTRB)">
      <summary>
        查找单应性。
      </summary>
      <param name="sourceWidth"> 源矩形的宽度 </param>
      <param name="sourceHeight"> 源矩形的高度 </param>
      <param name="destination"> 目标变换者。 </param>
      <returns> 单应性矩阵。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.FindHomography(System.Single,System.Single,System.Single,System.Single,FanKit.Transformers.ITransformerLTRB)">
      <summary>
        查找单应性。
      </summary>
      <param name="sourceX"> 源矩形的 X </param>
      <param name="sourceY"> 源矩形的 Y </param>
      <param name="sourceWidth"> 源矩形的宽度 </param>
      <param name="sourceHeight"> 源矩形的高度 </param>
      <param name="destination"> 目标变换者。 </param>
      <returns> 单应性矩阵。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.FindHomography3D(System.Single,System.Single,System.Single,System.Single,FanKit.Transformers.ITransformerLTRB)">
      <summary>
        查找单应性。
      </summary>
      <param name="sourceX"> 源矩形的 X </param>
      <param name="sourceY"> 源矩形的 Y </param>
      <param name="sourceWidth"> 源矩形的宽度 </param>
      <param name="sourceHeight"> 源矩形的高度 </param>
      <param name="destination"> 目标变换者。 </param>
      <returns> 单应性矩阵。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.FindHomography(FanKit.Transformers.ITransformerLTRB,FanKit.Transformers.ITransformerLTRB)">
      <summary>
        查找单应性。
      </summary>
      <param name="source"> 源变换者。 </param>
      <param name="destination"> 目标变换者。 </param>
      <returns> 单应性矩阵。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.FindHomography3D(FanKit.Transformers.TransformerRect,FanKit.Transformers.ITransformerLTRB)">
      <summary>
        查找单应性。
      </summary>
      <param name="source"> 源变换者。 </param>
      <param name="destination"> 目标变换者。 </param>
      <returns> 单应性矩阵。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.GetRadians(System.Numerics.Vector2)">
      <summary>
        获取旋转弧度。
      </summary>
      <param name="centerPoint"> 中心点。 </param>
      <returns> 产生的弧度。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.GetSkew(System.Numerics.Vector2,System.Single)">
      <summary>
        获取倾斜弧度。
      </summary>
      <param name="centerPoint"> 中心点。 </param>
      <param name="radians"> 旋转弧度。 </param>
      <returns> 产生的弧度。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.TransformX(System.Single,FanKit.Transformers.IndicatorMode)">
      <summary>
        X
      </summary>
      <param name="value"> 目标值。 </param>
      <param name="indicatorMode"> 指示器模式。 </param>
      <returns> 产生的向量。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.TransformY(System.Single,FanKit.Transformers.IndicatorMode)">
      <summary>
        Y
      </summary>
      <param name="value"> 目标值。 </param>
      <param name="indicatorMode"> 指示器模式。 </param>
      <returns> 产生的向量。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.TransformWidth(System.Single,FanKit.Transformers.IndicatorMode,System.Boolean)">
      <summary>
        宽度
      </summary>
      <param name="value"> 目标值。 </param>
      <param name="indicatorMode"> 指示器模式。 </param>
      <param name="isRatio"> 缩放时保持比例。 </param>
      <returns> 产生的矩阵。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.TransformHeight(System.Single,FanKit.Transformers.IndicatorMode,System.Boolean)">
      <summary>
        高度
      </summary>
      <param name="value"> 目标值。 </param>
      <param name="indicatorMode"> 指示器模式。 </param>
      <param name="isRatio"> 缩放时保持比例。 </param>
      <returns> 产生的矩阵。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.TransformRotate(System.Single,FanKit.Transformers.IndicatorMode)">
      <summary>
        旋转
      </summary>
      <param name="value"> 目标值。 </param>
      <param name="indicatorMode"> 指示器模式。 </param>
      <returns> 产生的矩阵。 </returns>
    </member>
    <member name="M:FanKit.Transformers.Transformer.TransformSkew(System.Single,FanKit.Transformers.IndicatorMode)">
      <summary>
        偏斜
      </summary>
      <param name="value"> 目标值。 </param>
      <param name="indicatorMode"> 指示器模式。 </param>
      <returns> 产生的矩阵。 </returns>
    </member>
    <member name="T:FanKit.Transformers.SnapBase`2">
      <summary>
        基础吸附工具。
      </summary>
      <typeparam name="S"> 源类型。 </typeparam>
      <typeparam name="D"> 目标类型。 </typeparam>
    </member>
    <member name="P:FanKit.Transformers.SnapBase`2.NodeRadius">
      <summary> 节点的半径。默认 12。 </summary>
    </member>
    <member name="P:FanKit.Transformers.SnapBase`2.Source">
      <summary> 获取或设置源。 </summary>
    </member>
    <member name="P:FanKit.Transformers.SnapBase`2.Destinations">
      <summary> 获取或设置目标。 </summary>
    </member>
    <member name="F:FanKit.Transformers.SnapBase`2.IsXSnap">
      <summary> 是否吸附到 X 轴。 </summary>
    </member>
    <member name="F:FanKit.Transformers.SnapBase`2.XSnap">
      <summary> X 轴位置。 </summary>
    </member>
    <member name="F:FanKit.Transformers.SnapBase`2.XDestination">
      <summary> X 轴目标。 </summary>
    </member>
    <member name="F:FanKit.Transformers.SnapBase`2.IsYSnap">
      <summary> 是否吸附到 Y 轴。 </summary>
    </member>
    <member name="F:FanKit.Transformers.SnapBase`2.YSnap">
      <summary> Y 轴位置。 </summary>
    </member>
    <member name="F:FanKit.Transformers.SnapBase`2.YDestination">
      <summary> Y 轴目标。 </summary>
    </member>
    <member name="M:FanKit.Transformers.SnapBase`2.Draw(Microsoft.Graphics.Canvas.CanvasDrawingSession)">
      <summary>
        在画布绘制时发生。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
    </member>
    <member name="M:FanKit.Transformers.SnapBase`2.Draw(Microsoft.Graphics.Canvas.CanvasDrawingSession,System.Numerics.Matrix3x2)">
      <summary>
        在画布绘制时发生。
      </summary>
      <param name="drawingSession"> 绘制会话。 </param>
      <param name="matrix"> 矩阵。 </param>
    </member>
    <member name="M:FanKit.Transformers.SnapBase`2.XTop">
      <summary> X 轴顶部。 </summary>
    </member>
    <member name="M:FanKit.Transformers.SnapBase`2.XBottom">
      <summary> X 轴底部。 </summary>
    </member>
    <member name="M:FanKit.Transformers.SnapBase`2.YLeft">
      <summary> Y 轴向左。 </summary>
    </member>
    <member name="M:FanKit.Transformers.SnapBase`2.YRight">
      <summary> Y 轴向右。 </summary>
    </member>
    <member name="M:FanKit.Transformers.SnapBase`2.Default">
      <summary>
        默认
      </summary>
    </member>
    <member name="T:FanKit.Transformers.TransformerBorder">
      <summary>
        表示平面直角坐标系中的最大边界。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        初始化 <see cref="T:FanKit.Transformers.TransformerBorder"/>。
      </summary>
      <param name="left"> 边框的左侧的 X 轴值。 </param>
      <param name="top"> 边框的顶部的 Y 轴位置。 </param>
      <param name="right"> 边框的右侧的 X 轴值。 </param>
      <param name="bottom"> 边框的底部的 Y 轴位置。 </param>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.#ctor(System.Single,System.Single)">
      <summary>
        初始化 <see cref="T:FanKit.Transformers.TransformerBorder"/>。
      </summary>
      <param name="width"> 边界的宽度。 </param>
      <param name="height"> 边界的高度。 </param>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.#ctor(FanKit.Transformers.ITransformerLTRB)">
      <summary>
        初始化 <see cref="T:FanKit.Transformers.TransformerBorder"/>。
      </summary>
      <param name="bounds"> 边框。 </param>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.#ctor(System.Collections.Generic.IEnumerable{FanKit.Transformers.Transformer})">
      <summary>
        初始化 <see cref="T:FanKit.Transformers.TransformerBorder"/>。
      </summary>
      <param name="bounds"> 边框。 </param>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.#ctor(System.Collections.Generic.IEnumerable{FanKit.Transformers.IGetActualTransformer})">
      <summary>
        初始化 <see cref="T:FanKit.Transformers.TransformerBorder"/>。
      </summary>
      <param name="bounds"> 边框。 </param>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.#ctor(System.Collections.Generic.IEnumerable{FanKit.Transformers.Node})">
      <summary>
        初始化 <see cref="T:FanKit.Transformers.TransformerBorder"/>。
      </summary>
      <param name="nodes"> 节点。 </param>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.#ctor(System.Collections.Generic.IList{FanKit.Transformers.NodeCollection})">
      <summary>
        初始化 <see cref="T:FanKit.Transformers.TransformerBorder"/>。
      </summary>
      <param name="nodess">
        <see cref="T:FanKit.Transformers.NodeCollection"/> 集合。
      </param>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.Add(FanKit.Transformers.TransformerBorder,System.Numerics.Vector2)">
      <summary>
        将边界和矢量相加。
      </summary>
      <param name="left"> 要相加的边界。 </param>
      <param name="right"> 要相加的向量。 </param>
      <returns> 求和的边界。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.Subtract(FanKit.Transformers.TransformerBorder,System.Numerics.Vector2)">
      <summary>
        从边界减去向量。
      </summary>
      <param name="left"> 边界。 </param>
      <param name="right"> 向量。 </param>
      <returns> 相差的边界。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.Multiply(FanKit.Transformers.TransformerBorder,System.Single)">
      <summary>
        以特定的缩放乘以边界。
      </summary>
      <param name="left"> 要相乘的边界。 </param>
      <param name="right"> 缩放值。 </param>
      <returns> 缩放的边界。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.Divide(FanKit.Transformers.TransformerBorder,System.Single)">
      <summary>
        以特定的缩放除以边界。
      </summary>
      <param name="left"> 边界。 </param>
      <param name="divisor"> 缩放值。 </param>
      <returns> 相除的结果边界。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.op_Addition(FanKit.Transformers.TransformerBorder,System.Numerics.Vector2)">
      <summary>
        将边界和矢量相加。
      </summary>
      <param name="left"> 要相加的边界。 </param>
      <param name="right"> 要相加的向量。 </param>
      <returns> 求和的边界。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.op_Subtraction(FanKit.Transformers.TransformerBorder,System.Numerics.Vector2)">
      <summary>
        从边界减去向量。
      </summary>
      <param name="left"> 边界。 </param>
      <param name="right"> 向量。 </param>
      <returns> 从边界减去向量的结果边界。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.op_Multiply(FanKit.Transformers.TransformerBorder,System.Single)">
      <summary>
        以特定的缩放值乘以特定的边界。
      </summary>
      <param name="left"> 边界。 </param>
      <param name="right"> 缩放值。 </param>
      <returns> 缩放的边界。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.op_Division(FanKit.Transformers.TransformerBorder,System.Single)">
      <summary>
        以特定的缩放除以边界。
      </summary>
      <param name="left"> 边界。 </param>
      <param name="right"> 缩放值。 </param>
      <returns> 相除的结果。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.Equals(FanKit.Transformers.TransformerBorder)">
      <summary>
        返回一个布尔值，该布尔值指示给定的变换者边界是否等于此变换者边界实例。
      </summary>
      <param name="other"> 与该实例进行比较的变换者边界。 </param>
      <returns> 如果另一个变换者边界等于此实例，则返回**true**，否则返回**false**。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.GetHashCode">
      <summary>
        返回此实例的哈希码。
      </summary>
      <returns> 一个是此实例的哈希码的 32 位有符号整型。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.op_Equality(FanKit.Transformers.TransformerBorder,FanKit.Transformers.TransformerBorder)">
      <summary>
        返回一个值，该值指示两个指定节点中的每对元素是否相等。
      </summary>
      <param name="left"> 要比较的第一个边界。 </param>
      <param name="right"> 要比较的第二个边界。 </param>
      <returns> 如果左右相等则返回**true**，否则返回**false**。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.op_Inequality(FanKit.Transformers.TransformerBorder,FanKit.Transformers.TransformerBorder)">
      <summary>
        返回一个布尔值，指示两个给定节点是否不相等。
      </summary>
      <param name="left"> 要比较的第一个边界。 </param>
      <param name="right"> 要比较的第二个边界。 </param>
      <returns> 如果节点不相等，则返回**true**；如果它们相等，则为假。 </returns>
    </member>
    <member name="P:FanKit.Transformers.TransformerBorder.Left">
      <summary> 获取边界的左侧的 X 轴值。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerBorder.Top">
      <summary> 获取边界的顶部的 Y 轴位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerBorder.Right">
      <summary> 获取边界的右侧的 X 轴值。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerBorder.Bottom">
      <summary> 获取边界的底部的 Y 轴位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerBorder.Width">
      <summary> 获取边界的宽度。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerBorder.Height">
      <summary> 获取边界的高度。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerBorder.CenterX">
      <summary> 获取边界的中心点的 X 轴值。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerBorder.CenterY">
      <summary> 获取边界的中心点的 Y 轴位置。 </summary>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.ToTransformer">
      <summary>
        转为变换者。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.TransformerBorder.GetBorderValue(FanKit.Transformers.BorderMode)">
      <summary>
        通过左，右，上，下获取值。
      </summary>
      <param name="borderMode"> 边界模式。 </param>
      <returns> 产生的值。 </returns>
    </member>
    <member name="T:FanKit.Transformers.BorderBorderSnap">
      <summary>
        <see cref="T:FanKit.Transformers.TransformerBorder"/> 的吸附工具。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.BorderBorderSnap.SetXSnapMove(System.Single,FanKit.Transformers.TransformerBorder)">
      <summary>
        设置 <see cref="F:FanKit.Transformers.SnapBase`2.XSnap"/>。
      </summary>
      <param name="moveX"> 移动 X。 </param>
      <param name="destination"> 目标。 </param>
      <returns>
        <see cref="F:FanKit.Transformers.SnapBase`2.IsXSnap"/>
      </returns>
    </member>
    <member name="M:FanKit.Transformers.BorderBorderSnap.SetYSnapMove(System.Single,FanKit.Transformers.TransformerBorder)">
      <summary>
        设置 <see cref="F:FanKit.Transformers.SnapBase`2.YSnap"/>。
      </summary>
      <param name="moveY"> 移动 Y。 </param>
      <param name="destination"> 目标。 </param>
      <returns>
        <see cref="F:FanKit.Transformers.SnapBase`2.IsYSnap"/>
      </returns>
    </member>
    <member name="M:FanKit.Transformers.BorderBorderSnap.XTop">
      <summary> X 轴顶部。 </summary>
    </member>
    <member name="M:FanKit.Transformers.BorderBorderSnap.XBottom">
      <summary> X 轴底部。 </summary>
    </member>
    <member name="M:FanKit.Transformers.BorderBorderSnap.YLeft">
      <summary> Y 轴向左。 </summary>
    </member>
    <member name="M:FanKit.Transformers.BorderBorderSnap.YRight">
      <summary> Y 轴向右。 </summary>
    </member>
    <member name="T:FanKit.Transformers.GeometryArrowTailType">
      <summary>
        箭尾的类型。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.GeometryArrowTailType.None">
      <summary> 正常。 </summary>
    </member>
    <member name="F:FanKit.Transformers.GeometryArrowTailType.Arrow">
      <summary> 箭头。 </summary>
    </member>
    <member name="T:FanKit.Transformers.TransformerGeometry">
      <summary>
        提供用于转换为几何形状的静态方法。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerGeometry.Z276">
      <summary> 0.27614f </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerGeometry.Z552">
      <summary> 0.55228f </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerGeometry.StartingRotation">
      <summary> 获取顶部向量。 </summary>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.GetRotationVector(System.Single)">
      <summary>
        从旋转获取单位向量。
      </summary>
      <param name="rotation"> 源旋转。 </param>
      <returns> 单位向量。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateRectangle(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB)">
      <summary>
        创建一个新的矩形几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateRectangle(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Numerics.Matrix3x2)">
      <summary>
        创建一个新的矩形几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="matrix"> 矩阵。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateRectangle(Microsoft.Graphics.Canvas.ICanvasResourceCreator,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>
        创建一个新的矩形几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="leftTop"> 边框的左上角的位置。 </param>
      <param name="rightTop"> 边框的右上角的位置。 </param>
      <param name="rightBottom"> 边框的右下角的位置。 </param>
      <param name="leftBottom"> 边框的左下角的位置。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateRectangle(Microsoft.Graphics.Canvas.ICanvasResourceCreator,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary>
        创建一个新的矩形几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="leftTop"> 边框的左上角的位置。 </param>
      <param name="rightTop"> 边框的右上角的位置。 </param>
      <param name="rightBottom"> 边框的右下角的位置。 </param>
      <param name="leftBottom"> 边框的左下角的位置。 </param>
      <param name="matrix"> 矩阵。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateEllipse(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB)">
      <summary>
        创建一个新的椭圆几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateEllipse(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Numerics.Matrix3x2)">
      <summary>
        创建一个新的椭圆几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="matrix"> 矩阵。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateEllipse(Microsoft.Graphics.Canvas.ICanvasResourceCreator,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>
        创建一个新的椭圆几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="centerLeft"> 边框的左下角和左上角的中心点的位置。 </param>
      <param name="centerTop"> 边框的左上角和右上角的中心点的位置。 </param>
      <param name="centerRight"> 边框的右上角和右下角的中心点的位置。 </param>
      <param name="centerBottom"> 边框的右下角和左下角的中心点的位置。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateEllipse(Microsoft.Graphics.Canvas.ICanvasResourceCreator,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary>
        创建一个新的椭圆几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="centerLeft"> 边框的左下角和左上角的中心点的位置。 </param>
      <param name="centerTop"> 边框的左上角和右上角的中心点的位置。 </param>
      <param name="centerRight"> 边框的右上角和右下角的中心点的位置。 </param>
      <param name="centerBottom"> 边框的右下角和左下角的中心点的位置。 </param>
      <param name="matrix"> 矩阵。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateRoundRect(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Single)">
      <summary>
        创建一个新的圆角矩形几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="corner"> 角落。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateRoundRect(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Numerics.Matrix3x2,System.Single)">
      <summary>
        创建一个新的圆角矩形几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="corner"> 角落。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateTriangle(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Single)">
      <summary>
        创建一个新的三角形几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="center"> 中心的值， </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateTriangle(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Numerics.Matrix3x2,System.Single)">
      <summary>
        创建一个新的三角形几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="center"> 中心的值， </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateTriangle(Microsoft.Graphics.Canvas.ICanvasResourceCreator,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single)">
      <summary>
        创建一个新的三角形几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="leftTop"> 边框的左上角的位置。 </param>
      <param name="rightTop"> 边框的右上角的位置。 </param>
      <param name="rightBottom"> 边框的右下角的位置。 </param>
      <param name="leftBottom"> 边框的左下角的位置。 </param>
      <param name="center"> 中心的值， </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateTriangle(Microsoft.Graphics.Canvas.ICanvasResourceCreator,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Matrix3x2,System.Single)">
      <summary>
        创建一个新的三角形几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="leftTop"> 边框的左上角的位置。 </param>
      <param name="rightTop"> 边框的右上角的位置。 </param>
      <param name="rightBottom"> 边框的右下角的位置。 </param>
      <param name="leftBottom"> 边框的左下角的位置。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="center"> 中心的值， </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateDiamond(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Single)">
      <summary>
        创建一个新的菱形几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="mid"> 中间值。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateDiamond(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Numerics.Matrix3x2,System.Single)">
      <summary>
        创建一个新的菱形几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="mid"> 中间值。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreatePentagon(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Int32)">
      <summary>
        创建一个新的五边形几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="points"> 点数。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreatePentagon(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Numerics.Matrix3x2,System.Int32)">
      <summary>
        创建一个新的五边形几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="points"> 点数。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateStar(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Int32,System.Single)">
      <summary>
        创建一个新的星形几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="points"> 点数。 </param>
      <param name="innerRadius"> 内部半径。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateStar(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Numerics.Matrix3x2,System.Int32,System.Single)">
      <summary>
        创建一个新的星形几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="points"> 点数。 </param>
      <param name="innerRadius"> 内部半径。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateCog(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Int32,System.Single,System.Single,System.Single)">
      <summary>
        创建一个新的齿轮几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="count"> 点数。 </param>
      <param name="innerRadius"> 内部半径。 </param>
      <param name="tooth"> 外齿。 </param>
      <param name="notch"> 缺口。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateCog(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Numerics.Matrix3x2,System.Int32,System.Single,System.Single,System.Single)">
      <summary>
        创建一个新的齿轮几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="count"> 点数。 </param>
      <param name="innerRadius"> 内部半径。 </param>
      <param name="tooth"> 外齿。 </param>
      <param name="notch"> 缺口。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateDonut(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Single)">
      <summary>
        创建一个新的甜甜圈几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="holeRadius"> 孔半径。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateDonut(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Numerics.Matrix3x2,System.Single)">
      <summary>
        创建一个新的甜甜圈几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="holeRadius"> 孔半径。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreatePie(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Single)">
      <summary>
        创建一个新的饼图几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="sweepAngle"> 扫描角度。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreatePie(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Numerics.Matrix3x2,System.Single)">
      <summary>
        创建一个新的饼图几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="sweepAngle"> 扫描角度。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateCookie(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Single,System.Single)">
      <summary>
        创建一个新的曲奇饼几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="innerRadius"> 内部半径。 </param>
      <param name="sweepAngle"> 扫描角度。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateCookie(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Numerics.Matrix3x2,System.Single,System.Single)">
      <summary>
        创建一个新的曲奇饼几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="innerRadius"> 内部半径。 </param>
      <param name="sweepAngle"> 扫描角度。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateArrow(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Boolean,System.Single,System.Single,FanKit.Transformers.GeometryArrowTailType,FanKit.Transformers.GeometryArrowTailType)">
      <summary>
        创建一个新的箭头几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="isAbsolute"> 是绝对的吗？ </param>
      <param name="width"> 绝对宽度。 </param>
      <param name="value"> 相对值。 </param>
      <param name="leftTail"> 左尾。 </param>
      <param name="rightTail"> 右尾。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateArrow(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Numerics.Matrix3x2,System.Boolean,System.Single,System.Single,FanKit.Transformers.GeometryArrowTailType,FanKit.Transformers.GeometryArrowTailType)">
      <summary>
        创建一个新的箭头几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="isAbsolute"> 是绝对的吗？ </param>
      <param name="width"> 绝对宽度。 </param>
      <param name="value"> 相对值。 </param>
      <param name="leftTail"> 左尾。 </param>
      <param name="rightTail"> 右尾。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateCapsule(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB)">
      <summary>
        创建一个新的胶囊几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateCapsule(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Numerics.Matrix3x2)">
      <summary>
        创建一个新的胶囊几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="matrix"> 矩阵。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateHeart(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Single)">
      <summary>
        创建一个新的心脏几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="spread"> 扩展。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerGeometry.CreateHeart(Microsoft.Graphics.Canvas.ICanvasResourceCreator,FanKit.Transformers.ITransformerLTRB,System.Numerics.Matrix3x2,System.Single)">
      <summary>
        创建一个新的心脏几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="bounds"> 边框。 </param>
      <param name="matrix"> 矩阵。 </param>
      <param name="spread"> 扩展。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="T:FanKit.Transformers.TransformerMatrix">
      <summary>
        封装两个变换者值（源和目标）的结构。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerMatrix.Source">
      <summary> 源变换者。 </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerMatrix.Destination">
      <summary> 目标变换者。 </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerMatrix.DisabledRadian">
      <summary> 禁用旋转弧度吗？默认**false**。 </summary>
    </member>
    <member name="M:FanKit.Transformers.TransformerMatrix.#ctor(FanKit.Transformers.Transformer)">
      <summary>
        初始化 <see cref="T:FanKit.Transformers.TransformerMatrix"/>。
      </summary>
      <param name="transformer"> 目标变换者。 </param>
    </member>
    <member name="M:FanKit.Transformers.TransformerMatrix.#ctor(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>
        初始化 <see cref="T:FanKit.Transformers.TransformerMatrix"/>。
      </summary>
      <param name="pointA"> 新添加的目标变换者必须包含的第一个点。 </param>
      <param name="pointB"> 新添加的目标变换者必须包含的第二个点。 </param>
    </member>
    <member name="M:FanKit.Transformers.TransformerMatrix.#ctor(System.Single,System.Single,System.Numerics.Vector2)">
      <summary>
        初始化 <see cref="T:FanKit.Transformers.TransformerMatrix"/>。
      </summary>
      <param name="width"> 目标矩形的宽度。 </param>
      <param name="height"> 目标矩形的高度。 </param>
      <param name="postion"> 目标变换者的左上角的位置。 </param>
    </member>
    <member name="M:FanKit.Transformers.TransformerMatrix.GetMatrix">
      <summary>
        获取 <see cref="T:FanKit.Transformers.TransformerMatrix"/> 的结果矩阵。
      </summary>
      <returns> 产生的矩阵。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerMatrix.CacheTransform">
      <summary>
        缓存 <see cref="T:FanKit.Transformers.TransformerMatrix"/> 的变换者。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.TransformerMatrix.TransformMultiplies(System.Numerics.Matrix3x2)">
      <summary>
        通过给定的矩阵对 <see cref="T:FanKit.Transformers.TransformerMatrix"/> 进行变换。
      </summary>
      <param name="matrix"> 结果矩阵。 </param>
    </member>
    <member name="M:FanKit.Transformers.TransformerMatrix.TransformAdd(System.Numerics.Vector2)">
      <summary>
        通过给定的向量对 <see cref="T:FanKit.Transformers.TransformerMatrix"/> 进行变换。
      </summary>
      <param name="vector"> 用于相加的加值。 </param>
    </member>
    <member name="T:FanKit.Transformers.TransformerMode">
      <summary>
        <see cref="T:FanKit.Transformers.Transformer"/> 的模式。
      </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerMode.None">
      <summary> 正常。 </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerMode.Rotation">
      <summary> 旋转。 </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerMode.SkewLeft">
      <summary> 倾斜（拖拽左侧的节点）。 </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerMode.SkewTop">
      <summary> 倾斜（拖拽顶部的节点）。 </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerMode.SkewRight">
      <summary> 倾斜（拖拽右侧的节点）。 </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerMode.SkewBottom">
      <summary> 倾斜（拖拽底部的节点）。 </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerMode.ScaleLeft">
      <summary> 缩放（拖拽左侧的节点）。 </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerMode.ScaleTop">
      <summary> 缩放（拖拽顶部的节点）。 </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerMode.ScaleRight">
      <summary> 缩放（拖拽右侧的节点）。 </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerMode.ScaleBottom">
      <summary> 缩放（拖拽底部的节点）。 </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerMode.ScaleLeftTop">
      <summary> 缩放（拖拽左上角的节点）。 </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerMode.ScaleRightTop">
      <summary> 缩放（拖拽右上角的节点）。 </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerMode.ScaleRightBottom">
      <summary> 缩放（拖拽右下角的节点）。 </summary>
    </member>
    <member name="F:FanKit.Transformers.TransformerMode.ScaleLeftBottom">
      <summary> 缩放（拖拽左下角的节点）。 </summary>
    </member>
    <member name="T:FanKit.Transformers.TransformerRect">
      <summary>
        封装四个范围值（左，上，右，下）的结构。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.TransformerRect.#ctor(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>
        初始化 <see cref="T:FanKit.Transformers.TransformerRect"/>。
      </summary>
      <param name="pointA"> 新添加的矩形必须包含的第一个点。 </param>
      <param name="pointB"> 新添加的矩形必须包含的第二个点。 </param>
    </member>
    <member name="M:FanKit.Transformers.TransformerRect.#ctor(System.Numerics.Vector2,System.Numerics.Vector2,System.Boolean,System.Boolean)">
      <summary>
        初始化 <see cref="T:FanKit.Transformers.TransformerRect"/>。
      </summary>
      <param name="pointA"> 新添加的矩形必须包含的第一个点。 </param>
      <param name="pointB"> 新添加的矩形必须包含的第二个点。 </param>
      <param name="isCenter"> 围绕中心缩放。 </param>
      <param name="isSquare"> 宽度和高度相等。 </param>
    </member>
    <member name="M:FanKit.Transformers.TransformerRect.#ctor(System.Single,System.Single,System.Numerics.Vector2)">
      <summary>
        初始化 <see cref="T:FanKit.Transformers.TransformerRect"/>。
      </summary>
      <param name="width"> 矩形的宽度。 </param>
      <param name="height"> 矩形的高度。 </param>
      <param name="postion"> 矩形的左上角的位置。 </param>
    </member>
    <member name="M:FanKit.Transformers.TransformerRect.ToRect">
      <summary>
        转为矩形。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.TransformerRect.ToRectangle(Microsoft.Graphics.Canvas.ICanvasResourceCreator)">
      <summary>
        转为几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerRect.ToRectangle(Microsoft.Graphics.Canvas.ICanvasResourceCreator,System.Numerics.Matrix3x2)">
      <summary>
        转为几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="matrix"> 矩阵。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerRect.ToEllipse(Microsoft.Graphics.Canvas.ICanvasResourceCreator)">
      <summary>
        转为几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="M:FanKit.Transformers.TransformerRect.ToEllipse(Microsoft.Graphics.Canvas.ICanvasResourceCreator,System.Numerics.Matrix3x2)">
      <summary>
        转为几何形状。
      </summary>
      <param name="resourceCreator"> 资源创建者。 </param>
      <param name="matrix"> 矩阵。 </param>
      <returns> 产生的几何形状。 </returns>
    </member>
    <member name="P:FanKit.Transformers.TransformerRect.Left">
      <summary> 获取矩形的左侧的 X 轴值。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerRect.Top">
      <summary> 获取矩形的顶部的 Y 轴位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerRect.Right">
      <summary> 获取矩形的右侧的 X 轴值。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerRect.Bottom">
      <summary> 获取矩形的底部的 Y 轴位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerRect.Width">
      <summary> 获取矩形的宽度。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerRect.Height">
      <summary> 获取矩形的高度。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerRect.CenterX">
      <summary> 获取矩形的中心点的 X 轴值。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerRect.CenterY">
      <summary> 获取矩形的中心点的 Y 轴位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerRect.Center">
      <summary> 获取矩形的中心点的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerRect.CenterLeft">
      <summary> 获取矩形的左下角和左上角的中心点的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerRect.CenterTop">
      <summary> 获取矩形的左上角和右上角的中心点的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerRect.CenterRight">
      <summary> 获取矩形的右上角和右下角的中心点的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerRect.CenterBottom">
      <summary> 获取矩形的右下角和左下角的中心点的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerRect.LeftTop">
      <summary> 获取矩形的左上角的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerRect.RightTop">
      <summary> 获取矩形的左上角的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerRect.RightBottom">
      <summary> 获取矩形的右下角的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerRect.LeftBottom">
      <summary> 获取矩形的左下角的位置。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerRect.Horizontal">
      <summary> 获取矩形的水平向量。 </summary>
    </member>
    <member name="P:FanKit.Transformers.TransformerRect.Vertical">
      <summary> 获取矩形的垂直向量。 </summary>
    </member>
    <member name="T:FanKit.Transformers.XML">
      <summary>
        为 XElement 提供常量和静态方法。
      </summary>
    </member>
    <member name="M:FanKit.Transformers.XML.SaveColor(System.String,Windows.UI.Color)">
      <summary>
        将整个 <see cref="T:Windows.UI.Color"/> 保存到 XElement。
      </summary>
      <param name="elementName"> 元素名称。 </param>
      <param name="color"> 源数据。 </param>
      <returns> 保存的 XElement。 </returns>
    </member>
    <member name="M:FanKit.Transformers.XML.LoadColor(System.Xml.Linq.XElement)">
      <summary>
        从 XElement 加载 <see cref="T:Windows.UI.Color"/>。
      </summary>
      <param name="element"> 源 XElement。 </param>
      <returns>
        已加载的 <see cref="T:Windows.UI.Color"/>。
      </returns>
    </member>
    <member name="M:FanKit.Transformers.XML.SaveNode(System.String,FanKit.Transformers.Node)">
      <summary>
        将整个 <see cref="T:FanKit.Transformers.Node"/> 保存到 XElement。
      </summary>
      <param name="elementName"> 元素名称。 </param>
      <param name="node"> 源数据。 </param>
      <returns> 保存的 XElement。 </returns>
    </member>
    <member name="M:FanKit.Transformers.XML.LoadNode(System.Xml.Linq.XElement)">
      <summary>
        从 XElement 加载 <see cref="T:FanKit.Transformers.Node"/>。
      </summary>
      <param name="element"> 源 XElement。 </param>
      <returns>
        已加载的 <see cref="T:FanKit.Transformers.Node"/>。
      </returns>
    </member>
    <member name="M:FanKit.Transformers.XML.SaveNodeCollection(System.String,FanKit.Transformers.NodeCollection)">
      <summary>
        将整个 <see cref="T:FanKit.Transformers.NodeCollection"/> 保存到 XElement 。
      </summary>
      <param name="elementName"> 元素名称。 </param>
      <param name="nodes"> 源数据。 </param>
      <returns> 保存的 XElement。 </returns>
    </member>
    <member name="M:FanKit.Transformers.XML.LoadNodeCollection(System.Xml.Linq.XElement)">
      <summary>
        从 XElement 加载 <see cref="T:FanKit.Transformers.NodeCollection"/>。
      </summary>
      <param name="element"> 源 XElement。 </param>
      <returns>
        已加载的 <see cref="T:FanKit.Transformers.NodeCollection"/>。
      </returns>
    </member>
    <member name="M:FanKit.Transformers.XML.SaveTransformer(System.String,FanKit.Transformers.Transformer)">
      <summary>
        将整个 <see cref="T:FanKit.Transformers.Transformer"/> 保存到 XElement。
      </summary>
      <param name="elementName"> 元素名称。 </param>
      <param name="transformer"> 源数据。 </param>
      <returns> 保存的 XElement。 </returns>
    </member>
    <member name="M:FanKit.Transformers.XML.LoadTransformer(System.Xml.Linq.XElement)">
      <summary>
        从 XElement 加载 <see cref="T:FanKit.Transformers.Transformer"/>。
      </summary>
      <param name="element"> 源 XElement。 </param>
      <returns>
        已加载的 <see cref="T:FanKit.Transformers.Transformer"/>。
      </returns>
    </member>
    <member name="M:FanKit.Transformers.XML.SaveTransformerBorder(System.String,FanKit.Transformers.TransformerBorder)">
      <summary>
        将整个 <see cref="T:FanKit.Transformers.TransformerBorder"/> 保存到 XElement。
      </summary>
      <param name="elementName"> 元素名称。 </param>
      <param name="border"> 源数据。 </param>
      <returns> 保存的 XElement。 </returns>
    </member>
    <member name="M:FanKit.Transformers.XML.LoadTransformerBorder(System.Xml.Linq.XElement)">
      <summary>
        从 XElement 加载 <see cref="T:FanKit.Transformers.TransformerBorder"/>。
      </summary>
      <param name="element"> 源 XElement。 </param>
      <returns>
        已加载的 <see cref="T:FanKit.Transformers.TransformerBorder"/>。
      </returns>
    </member>
    <member name="M:FanKit.Transformers.XML.SaveVector2(System.String,System.Numerics.Vector2)">
      <summary>
        将整个 <see cref="T:System.Numerics.Vector2"/> 保存到 XElement。
      </summary>
      <param name="elementName"> 元素名称。 </param>
      <param name="vector"> 源数据。 </param>
      <returns> 保存的 XElement。 </returns>
    </member>
    <member name="M:FanKit.Transformers.XML.LoadVector2(System.Xml.Linq.XElement)">
      <summary>
        从 XElement 加载 <see cref="T:System.Numerics.Vector2"/>。
      </summary>
      <param name="element"> 源 XElement。 </param>
      <returns>
        已加载的 <see cref="T:System.Numerics.Vector2"/> 。
      </returns>
    </member>
    <member name="M:FanKit.Transformers.XML.CreateNodeType(System.String)">
      <summary>
        Create a <see cref="T:FanKit.Transformers.NodeType"/> from an string and XElement.
      </summary>
      <param name="type"> 起始字符串。 </param>
      <returns>
        The loaded <see cref="T:FanKit.Transformers.NodeType"/>.
      </returns>
    </member>
    <member name="M:FanKit.Transformers.XML.CreateGeometryArrowTailType(System.String)">
      <summary>
        Create a <see cref="T:FanKit.Transformers.GeometryArrowTailType"/> from the string.
      </summary>
      <param name="type"> 起始字符串。 </param>
      <returns>
        The created <see cref="T:FanKit.Transformers.GeometryArrowTailType"/>.
      </returns>
    </member>
    <member name="T:FanKit.Transformers.FanKit_Transformers_XamlTypeInfo.XamlMetaDataProvider">
      <summary>
        Main class for providing metadata for the app or library
      </summary>
    </member>
    <member name="M:FanKit.Transformers.FanKit_Transformers_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.Type)">
      <summary>
        GetXamlType(Type)
      </summary>
    </member>
    <member name="M:FanKit.Transformers.FanKit_Transformers_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.String)">
      <summary>
        GetXamlType(String)
      </summary>
    </member>
    <member name="M:FanKit.Transformers.FanKit_Transformers_XamlTypeInfo.XamlMetaDataProvider.GetXmlnsDefinitions">
      <summary>
        GetXmlnsDefinitions()
      </summary>
    </member>
    <member name="T:FanKit.Math">
      <summary>
        提供变换者的常量和静态方法。
      </summary>
    </member>
    <member name="F:FanKit.Math.RadiansStep">
      <summary> 角度制的 15 度。 </summary>
    </member>
    <member name="F:FanKit.Math.RadiansStepHalf">
      <summary> 角度制的 7.5。 </summary>
    </member>
    <member name="M:FanKit.Math.RadiansStepFrequency(System.Single)">
      <summary> 查找最接近的 15 的倍数。 </summary>
    </member>
    <member name="F:FanKit.Math.PiTwice">
      <summary> 数字 Π * 2。 </summary>
    </member>
    <member name="F:FanKit.Math.Pi">
      <summary> 数字 П。 </summary>
    </member>
    <member name="F:FanKit.Math.PiOver2">
      <summary> 数字 Π / 2。 </summary>
    </member>
    <member name="F:FanKit.Math.PiOver4">
      <summary> 数字 Π / 4。 </summary>
    </member>
    <member name="F:FanKit.Math.NodeRadius">
      <summary> 节点的半径。默认 12。 </summary>
    </member>
    <member name="F:FanKit.Math.NodeDistance">
      <summary> 两个节点之间的最小距离。默认 20。 </summary>
    </member>
    <member name="M:FanKit.Math.InNodeRadius(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>
        距离是否超过[节点半径]。最低：144。
      </summary>
      <param name="point0"> 第一个点。 </param>
      <param name="point1"> 第二个点。 </param>
      <returns> 如果距离超过[节点半径]，则返回**true**，否则返回**false**。 </returns>
    </member>
    <member name="M:FanKit.Math.OutNodeDistance(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>
        距离的长度平方是否超过[节点距离]。默认：400
      </summary>
      <param name="point0"> 第一个点。 </param>
      <param name="point1"> 第二个点。 </param>
      <returns> 如果长度平方'的距离超过[节点距离]，则返回**true**，否则返回**false**。 </returns>
    </member>
    <member name="M:FanKit.Math.GetOutsidePointInTransformer(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>
        在变换者上获得线的外点。
      </summary>
      <param name="nearPoint"> 到变换者上直线中到外点的最近点。 </param>
      <param name="farPoint"> 到变换者上直线中最外点的距离。 </param>
      <returns> 产生的点。 </returns>
    </member>
    <member name="M:FanKit.Math.InQuadrangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>
        返回四边形是否包含指定的点。
      </summary>
      <param name="point"> 点。 </param>
      <param name="leftTop"> 四边形的左上角的位置。 </param>
      <param name="rightTop"> 四边形的右上角的位置。 </param>
      <param name="rightBottom"> 四边形的右下角的位置。 </param>
      <param name="leftBottom"> 四边形的左下角的位置。 </param>
      <returns> 如果四边形包含指定点，则返回**true**，否则返回**false**。 </returns>
    </member>
    <member name="M:FanKit.Math.MovePointOfConvexQuadrilateral(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Int32)">
      <summary>
        移动四边形的点的位置来让四边形是一个凸四边形。
      </summary>
      <param name="point"> 点。 </param>
      <param name="diagonal"> 对角线上的点。 </param>
      <param name="left"> 对角线左侧的点。 </param>
      <param name="right"> 对角线右侧的点。 </param>
      <param name="margin"> 其他三个点组成的三角形的外边距。 </param>
      <returns> 产生的点。 </returns>
    </member>
    <member name="M:FanKit.Math.FootPoint(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>
        获取点和线的[垂足]。
      </summary>
      <param name="point"> 点。 </param>
      <param name="point0"> 线的第一个点。 </param>
      <param name="point1"> 线的第二个点。 </param>
      <returns> 产生的向量。 </returns>
    </member>
    <member name="M:FanKit.Math.IntersectionPoint(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>
        获取线 1 和线 2 的交点。
      </summary>
      <param name="line1A"> 线 1 的第一个点。 </param>
      <param name="line1B"> 线 1 的第二个点。 </param>
      <param name="line2A"> 线 2 的第一个点。 </param>
      <param name="line2B"> 线 2 的第二个点。 </param>
      <returns> 产生的向量。 </returns>
    </member>
    <member name="M:FanKit.Math.RadiansToVector(System.Single,System.Numerics.Vector2,System.Single)">
      <summary>
        获取坐标系中弧度的向量。
      </summary>
      <param name="radians"> 弧度。 </param>
      <param name="center"> 坐标系的中心。 </param>
      <param name="length"> 向量的长度。 </param>
      <returns> 产生的向量。 </returns>
    </member>
    <member name="M:FanKit.Math.VectorToRadians(System.Numerics.Vector2)">
      <summary>
        在坐标系中获取向量的弧度。
      </summary>
      <param name="vector"> 向量。 </param>
      <returns> 产生的弧度。 </returns>
    </member>
  </members>
  <member name="M:FanKit.Math.Rotate(System.Numerics.Vector2,System.Single,System.Single)">
    <summary>
      以特定的旋转值变换向量。
    </summary>
    <param name="value"> 要旋转的向量。 </param>
    <param name="cos"> 应用的旋转的余弦值。 </param>
    <param name="sin"> 应用的旋转的正弦值。 </param>
    <returns> 变换的向量。 </returns>
  </member>
  <member name="M:FanKit.Math.Rotate(System.Numerics.Vector2,System.Numerics.Vector2)">
    <summary>
      以特定的旋转值变换向量。
    </summary>
    <param name="value"> 要旋转的向量。 </param>
    <param name="rotation"> 应用的旋转。 </param>
    <returns> 变换的向量。 </returns>
  </member>
  <member name="M:FanKit.Math.CreateRotation(System.Single)">
    <summary>
      使用给定的旋转弧度创建旋转向量。
    </summary>
    <param name="radians"> 弧度旋转量。 </param>
    <returns> 旋转向量。 </returns>
  </member>
</doc>
